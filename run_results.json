{"results": [{"node": {"raw_sql": "{% if var('src_data') == 'test_scenario01' %}\nSELECT *\nFROM {{ref('test_scenario01_input_cbs_AccountPaymentServicer')}}\n\n{% else %}\nSELECT *\nFROM {{ source('ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402', 'cbs_AccountPaymentServicer')}}\n\n{% endif %}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cbs", "src_cbs_AccountPaymentServicer"], "unique_id": "model.ep_cco.src_cbs_AccountPaymentServicer", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cbs/src_cbs_AccountPaymentServicer.sql", "original_file_path": "models/src/cbs/src_cbs_AccountPaymentServicer.sql", "name": "src_cbs_AccountPaymentServicer", "resource_type": "model", "alias": "src_cbs_AccountPaymentServicer", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cbs_AccountPaymentServicer"]], "depends_on": {"macros": [], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_AccountPaymentServicer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cbs/src_cbs_AccountPaymentServicer.sql", "compiled": true, "compiled_sql": "\nSELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_AccountPaymentServicer`\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\nSELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_AccountPaymentServicer`\n\n", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.021580934524536133, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.127949Z", "completed_at": "2020-04-20T13:29:19.148047Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.148399Z", "completed_at": "2020-04-20T13:29:19.148416Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if var('src_data') == 'test_scenario01' %}\nSELECT *\nFROM {{ref('test_scenario01_input_cbs_Account')}}\n\n{% else %}\nSELECT *\n--FROM {{ source_data(var('src.cbs.account')) }}\nFROM {{ source(var('src_bq_bld02_dataset'), var('src.cbs.account')) }}\n\n{% endif %}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cbs", "src_cbs_Account"], "unique_id": "model.ep_cco.src_cbs_Account", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cbs/src_cbs_Account.sql", "original_file_path": "models/src/cbs/src_cbs_Account.sql", "name": "src_cbs_Account", "resource_type": "model", "alias": "src_cbs_Account", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cbs_Account"]], "depends_on": {"macros": ["macro.ep_cco.source_data"], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_Account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cbs/src_cbs_Account.sql", "compiled": true, "compiled_sql": "\nSELECT *\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_Account\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_Account`\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\nSELECT *\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_Account\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_Account`\n\n", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.014205217361450195, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.150025Z", "completed_at": "2020-04-20T13:29:19.162883Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.163195Z", "completed_at": "2020-04-20T13:29:19.163204Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "refdata", "refdata_internal_account"], "unique_id": "seed.ep_cco.refdata_internal_account", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "refdata/refdata_internal_account.csv", "original_file_path": "data/refdata/refdata_internal_account.csv", "name": "refdata_internal_account", "resource_type": "seed", "alias": "refdata_internal_account", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {"AccountId": "String", "ProductId": "String", "ProductVersion": "String", "BankId": "String"}, "tags": ["Reference Data", "Internal Account data"]}, "tags": ["Reference Data", "Internal Account data"], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco/data/refdata/refdata_internal_account.csv"}, "error": null, "status": null, "execution_time": 0.013116121292114258, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.164599Z", "completed_at": "2020-04-20T13:29:19.176458Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.176799Z", "completed_at": "2020-04-20T13:29:19.176808Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "refdata", "refdata_general_ledger_coa"], "unique_id": "seed.ep_cco.refdata_general_ledger_coa", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "refdata/refdata_general_ledger_coa.csv", "original_file_path": "data/refdata/refdata_general_ledger_coa.csv", "name": "refdata_general_ledger_coa", "resource_type": "seed", "alias": "refdata_general_ledger_coa", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {"CBSBankIdentifier": "String", "CBSAccountNumber": "String", "GLCostCentreCode": "String", "CBSProductCode": "String", "GLProjectCode": "String", "GLIntercompanyCode": "String", "GLProductCode": "String", "GLCompanyDescription": "String", "GLBusinessUnitDescription": "String", "GLCostCenterDescription": "String", "GLOriginDescription": "String", "GLIntercompanyDescription": "String", "GLProjectDescription": "String", "GLNominalDescription": "String", "GLProductCodeDescription": "String", "LegacyCompanyCode": "String", "LegacyResponsbilityCode": "String", "LegacyOriginCode": "String", "LegacyNominalCode": "String", "LegacyProjectCode": "String", "LegacyProductCode": "String", "LegacyCompanyDescription": "String", "LegacyOriginDescription": "String", "LegacyNominalDescription": "String", "LegacyProjectDescription": "String", "LegacyProductDescription": "String", "LegacyCostCenterDescription": "String"}, "tags": ["Reference Data", "Chart of Account Ref Data"]}, "tags": ["Reference Data", "Chart of Account Ref Data"], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco/data/refdata/refdata_general_ledger_coa.csv"}, "error": null, "status": null, "execution_time": 0.008001089096069336, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.178243Z", "completed_at": "2020-04-20T13:29:19.184623Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.185109Z", "completed_at": "2020-04-20T13:29:19.185119Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% if var('src_data') == 'test_scenario01' %}\nSELECT *\nFROM {{ref('test_scenario01_input_cbs_AccountPostings')}}\n\n{% else %}\nSELECT *\nFROM {{ source('ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402', 'src_postings_backup_from_databq')}}\n\n{% endif %}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cbs", "src_cbs_AccountPostings"], "unique_id": "model.ep_cco.src_cbs_AccountPostings", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cbs/src_cbs_AccountPostings.sql", "original_file_path": "models/src/cbs/src_cbs_AccountPostings.sql", "name": "src_cbs_AccountPostings", "resource_type": "model", "alias": "src_cbs_AccountPostings", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_postings_backup_from_databq"]], "depends_on": {"macros": [], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.src_postings_backup_from_databq"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cbs/src_cbs_AccountPostings.sql", "compiled": true, "compiled_sql": "\nSELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`src_postings_backup_from_databq`\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\nSELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`src_postings_backup_from_databq`\n\n", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.01129913330078125, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.186697Z", "completed_at": "2020-04-20T13:29:19.196773Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.197063Z", "completed_at": "2020-04-20T13:29:19.197072Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source('ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402', 'cbs_Balance')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cbs", "src_cbs_Balance"], "unique_id": "model.ep_cco.src_cbs_Balance", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cbs/src_cbs_Balance.sql", "original_file_path": "models/src/cbs/src_cbs_Balance.sql", "name": "src_cbs_Balance", "resource_type": "model", "alias": "src_cbs_Balance", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cbs_Balance"]], "depends_on": {"macros": [], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_Balance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cbs/src_cbs_Balance.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_Balance`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_Balance`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.009438037872314453, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.198301Z", "completed_at": "2020-04-20T13:29:19.206651Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.206976Z", "completed_at": "2020-04-20T13:29:19.206985Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source('ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402', 'cbs_PostingsInstructions')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cbs", "src_cbs_PostingsInstructions"], "unique_id": "model.ep_cco.src_cbs_PostingsInstructions", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cbs/src_cbs_PostingsInstructions.sql", "original_file_path": "models/src/cbs/src_cbs_PostingsInstructions.sql", "name": "src_cbs_PostingsInstructions", "resource_type": "model", "alias": "src_cbs_PostingsInstructions", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cbs_PostingsInstructions"]], "depends_on": {"macros": [], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_PostingsInstructions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cbs/src_cbs_PostingsInstructions.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_PostingsInstructions`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_PostingsInstructions`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.010122060775756836, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.208335Z", "completed_at": "2020-04-20T13:29:19.217272Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.217550Z", "completed_at": "2020-04-20T13:29:19.217559Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source('ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402', 'cbs_Transactions')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cbs", "src_cbs_Transaction"], "unique_id": "model.ep_cco.src_cbs_Transaction", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cbs/src_cbs_Transaction.sql", "original_file_path": "models/src/cbs/src_cbs_Transaction.sql", "name": "src_cbs_Transaction", "resource_type": "model", "alias": "src_cbs_Transaction", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cbs_Transactions"]], "depends_on": {"macros": [], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_Transactions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cbs/src_cbs_Transaction.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_Transactions`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_Transactions`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.009023189544677734, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.218977Z", "completed_at": "2020-04-20T13:29:19.226551Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.226914Z", "completed_at": "2020-04-20T13:29:19.226924Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source('ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402', 'cbs_AccountAttrKeyVal')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cbs", "src_cbs_AccountAttrKeyVal"], "unique_id": "model.ep_cco.src_cbs_AccountAttrKeyVal", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cbs/src_cbs_AccountAttrKeyVal.sql", "original_file_path": "models/src/cbs/src_cbs_AccountAttrKeyVal.sql", "name": "src_cbs_AccountAttrKeyVal", "resource_type": "model", "alias": "src_cbs_AccountAttrKeyVal", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cbs_AccountAttrKeyVal"]], "depends_on": {"macros": [], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_AccountAttrKeyVal"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cbs/src_cbs_AccountAttrKeyVal.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_AccountAttrKeyVal`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_AccountAttrKeyVal`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.03974604606628418, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.228493Z", "completed_at": "2020-04-20T13:29:19.267025Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.267302Z", "completed_at": "2020-04-20T13:29:19.267311Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source('ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402', 'cbs_PostingsBatch')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cbs", "src_cbs_PostingsBatch"], "unique_id": "model.ep_cco.src_cbs_PostingsBatch", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cbs/src_cbs_PostingsBatch.sql", "original_file_path": "models/src/cbs/src_cbs_PostingsBatch.sql", "name": "src_cbs_PostingsBatch", "resource_type": "model", "alias": "src_cbs_PostingsBatch", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cbs_PostingsBatch"]], "depends_on": {"macros": [], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cbs_PostingsBatch"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cbs/src_cbs_PostingsBatch.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_PostingsBatch`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cbs_PostingsBatch`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.008832693099975586, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.268794Z", "completed_at": "2020-04-20T13:29:19.276467Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.276736Z", "completed_at": "2020-04-20T13:29:19.276742Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source(var('src_bq_bld02_dataset'), var('src.cust.address')) }}\n--FROM {{ source_data(var('src.cust.address')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cust", "src_cust_Address"], "unique_id": "model.ep_cco.src_cust_Address", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cust/src_cust_Address.sql", "original_file_path": "models/src/cust/src_cust_Address.sql", "name": "src_cust_Address", "resource_type": "model", "alias": "src_cust_Address", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cust_Address"]], "depends_on": {"macros": ["macro.ep_cco.source_data"], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Address"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cust/src_cust_Address.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_Address`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Address", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_Address`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Address", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.011653900146484375, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.278179Z", "completed_at": "2020-04-20T13:29:19.288615Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.288897Z", "completed_at": "2020-04-20T13:29:19.288905Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source(var('src_bq_bld02_dataset'), var('src.cust.brand')) }}\n--FROM {{ source_data(var('src.cust.brand')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cust", "src_cust_Brand"], "unique_id": "model.ep_cco.src_cust_Brand", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cust/src_cust_Brand.sql", "original_file_path": "models/src/cust/src_cust_Brand.sql", "name": "src_cust_Brand", "resource_type": "model", "alias": "src_cust_Brand", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cust_Brand"]], "depends_on": {"macros": ["macro.ep_cco.source_data"], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Brand"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cust/src_cust_Brand.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_Brand`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Brand", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_Brand`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Brand", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.012244939804077148, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.290109Z", "completed_at": "2020-04-20T13:29:19.301173Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.301553Z", "completed_at": "2020-04-20T13:29:19.301563Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source(var('src_bq_bld02_dataset'), var('src.cust.customer')) }}\n--FROM {{ source_data(var('src.cust.customer')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cust", "src_cust_Customer"], "unique_id": "model.ep_cco.src_cust_Customer", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cust/src_cust_Customer.sql", "original_file_path": "models/src/cust/src_cust_Customer.sql", "name": "src_cust_Customer", "resource_type": "model", "alias": "src_cust_Customer", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cust_Customer"]], "depends_on": {"macros": ["macro.ep_cco.source_data"], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Customer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cust/src_cust_Customer.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_Customer`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Customer", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_Customer`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Customer", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.012101173400878906, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.303094Z", "completed_at": "2020-04-20T13:29:19.313982Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.314270Z", "completed_at": "2020-04-20T13:29:19.314279Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source(var('src_bq_bld02_dataset'), var('src.cust.customer_address')) }}\n--FROM {{ source_data(var('src.cust.customer_address')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cust", "src_cust_CustomerAddress"], "unique_id": "model.ep_cco.src_cust_CustomerAddress", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cust/src_cust_CustomerAddress.sql", "original_file_path": "models/src/cust/src_cust_CustomerAddress.sql", "name": "src_cust_CustomerAddress", "resource_type": "model", "alias": "src_cust_CustomerAddress", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cust_CustomerAddress"]], "depends_on": {"macros": ["macro.ep_cco.source_data"], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_CustomerAddress"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cust/src_cust_CustomerAddress.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_CustomerAddress`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_CustomerAddress", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_CustomerAddress`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_CustomerAddress", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.011704206466674805, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.315627Z", "completed_at": "2020-04-20T13:29:19.326038Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.326365Z", "completed_at": "2020-04-20T13:29:19.326375Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source(var('src_bq_bld02_dataset'), var('src.cust.customer_detail')) }}\n--FROM {{ source_data(var('src.cust.customer_detail')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cust", "src_cust_CustomerDetail"], "unique_id": "model.ep_cco.src_cust_CustomerDetail", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cust/src_cust_CustomerDetail.sql", "original_file_path": "models/src/cust/src_cust_CustomerDetail.sql", "name": "src_cust_CustomerDetail", "resource_type": "model", "alias": "src_cust_CustomerDetail", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cust_CustomerDetail"]], "depends_on": {"macros": ["macro.ep_cco.source_data"], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_CustomerDetail"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cust/src_cust_CustomerDetail.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_CustomerDetail`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_CustomerDetail", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_CustomerDetail`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_CustomerDetail", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.012851953506469727, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.327984Z", "completed_at": "2020-04-20T13:29:19.339514Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.339798Z", "completed_at": "2020-04-20T13:29:19.339808Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source(var('src_bq_bld02_dataset'), var('src.cust.organisation')) }}\n--FROM {{ source_data(var('src.cust.organisation')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cust", "src_cust_Organisation"], "unique_id": "model.ep_cco.src_cust_Organisation", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cust/src_cust_Organisation.sql", "original_file_path": "models/src/cust/src_cust_Organisation.sql", "name": "src_cust_Organisation", "resource_type": "model", "alias": "src_cust_Organisation", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cust_Organisation"]], "depends_on": {"macros": ["macro.ep_cco.source_data"], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Organisation"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cust/src_cust_Organisation.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_Organisation`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Organisation", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_Organisation`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_Organisation", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.012847185134887695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.341209Z", "completed_at": "2020-04-20T13:29:19.352766Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.353067Z", "completed_at": "2020-04-20T13:29:19.353076Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ source(var('src_bq_bld02_dataset'), var('src.cust.portfolio_item')) }}\n--FROM {{ source_data(var('src.cust.portfolio_item')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "cust", "src_cust_PortfolioItem"], "unique_id": "model.ep_cco.src_cust_PortfolioItem", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/cust/src_cust_PortfolioItem.sql", "original_file_path": "models/src/cust/src_cust_PortfolioItem.sql", "name": "src_cust_PortfolioItem", "resource_type": "model", "alias": "src_cust_PortfolioItem", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [], "sources": [["ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "cust_PortfolioItem"]], "depends_on": {"macros": ["macro.ep_cco.source_data"], "nodes": ["source.ep_cco.ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_PortfolioItem"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/cust/src_cust_PortfolioItem.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_PortfolioItem`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_PortfolioItem", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402`.`cust_PortfolioItem`\n--FROM ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402.cust_PortfolioItem", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.012048959732055664, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.354507Z", "completed_at": "2020-04-20T13:29:19.365332Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.365633Z", "completed_at": "2020-04-20T13:29:19.365643Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n     \"\"          as customer_name\n    ,\"\"          as sortcode_and_accountnumber\n    ,\"\"          as economic_code\n    ,\"\"          as industry_code\n    ,\"\"          as country_of_residence\n    ,\"\"          as source_platform_product_id\n    ,\"\"          as is_current_account\n    ,\"\"          as limit_amount\n    ,\"\"          as month_end_spot_balance\n    ,\"\"          as cr_cum_avg_bal_over_cal_month\n    ,\"\"          as dr_cum_avg_bal_over_cal_month\n    ,\"\"          as cr_interest_flow_over_cal_month\n    ,\"\"          as dr_interest_flow_over_cal_month", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "feed", "boe", "feed_boe_h1"], "unique_id": "model.ep_cco.feed_boe_h1", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "feed/boe/feed_boe_h1.sql", "original_file_path": "models/feed/boe/feed_boe_h1.sql", "name": "feed_boe_h1", "resource_type": "model", "alias": "feed_boe_h1", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["Feeds"]}, "tags": ["Feeds"], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "H1 BOE Feed", "columns": {"customer_name": {"name": "customer_name", "description": "Name of the customer", "meta": {}, "data_type": null, "tags": []}, "sortcode_and_accountnumber": {"name": "sortcode_and_accountnumber", "description": "Sort code and Account number for the customer", "meta": {}, "data_type": null, "tags": []}, "economic_code": {"name": "economic_code", "description": "Economic Sector Category as specified by the Bank of England", "meta": {}, "data_type": null, "tags": []}, "industry_code": {"name": "industry_code", "description": "Account classification on the Bank of England site.", "meta": {}, "data_type": null, "tags": []}, "country_of_residence": {"name": "country_of_residence", "description": "Customers country of residence", "meta": {}, "data_type": null, "tags": []}, "source_platform_product_id": {"name": "source_platform_product_id", "description": "Product ID from IF", "meta": {}, "data_type": null, "tags": []}, "is_current_account": {"name": "is_current_account", "description": "Whether the account is a current account as there is requirement to be able to tell them apart.", "meta": {}, "data_type": null, "tags": []}, "limit_amount": {"name": "limit_amount", "description": "Overdraft limit amount for current accounts, will be set to Zero as no overdraft limit in H1.", "meta": {}, "data_type": null, "tags": []}, "month_end_spot_balance": {"name": "month_end_spot_balance", "description": "Balance snapshot of the account on the last calendar day of the month. -ve signage denotes Credit Balance +ve signage or no signage denotes Debit Balance", "meta": {}, "data_type": null, "tags": []}, "cr_cum_avg_bal_over_cal_month": {"name": "cr_cum_avg_bal_over_cal_month", "description": "Cumulative balance / No of days in month (Credit)", "meta": {}, "data_type": null, "tags": []}, "dr_cum_avg_bal_over_cal_month": {"name": "dr_cum_avg_bal_over_cal_month", "description": "<p><strong>Business name:&nbsp;</strong>Dr Average Balance over calendar month</p> <p>Description:&nbsp;<br />Cumulative balance / No of days in month (Debit)</p> <p><strong>Mapping:</strong></p> <ul> <li>Step 1 - Store balances published by vault in Balance History table</li> <li>Step 2 - When end of day message is published from Vault take snapshot of account balance where valuedate = previous day</li> <li>Step 3 - Insert EOD balance into Balance Table</li> <li>Step 4 - Insert latest Balance into position summary table <ul> <li>Position Summary</li> <li>Dimension - Account</li> <li>Frequency - Daily</li> <li>Type - Balance</li> <li>Debits/Credits</li> <li>SummaryTimestamp - Valuedate</li> </ul> </li> </ul> <p>&nbsp;</p>", "meta": {}, "data_type": null, "tags": []}, "cr_interest_flow_over_cal_month": {"name": "cr_interest_flow_over_cal_month", "description": "Int flow over month - care with month ends over weekends (Credit)", "meta": {}, "data_type": null, "tags": []}, "dr_interest_flow_over_cal_month": {"name": "dr_interest_flow_over_cal_month", "description": "Int flow over month - care with month ends over weekends (Debit)", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/feed/boe/feed_boe_h1.yml", "build_path": "target/compiled/ep_cco/feed/boe/feed_boe_h1.sql", "compiled": true, "compiled_sql": "SELECT\n     \"\"          as customer_name\n    ,\"\"          as sortcode_and_accountnumber\n    ,\"\"          as economic_code\n    ,\"\"          as industry_code\n    ,\"\"          as country_of_residence\n    ,\"\"          as source_platform_product_id\n    ,\"\"          as is_current_account\n    ,\"\"          as limit_amount\n    ,\"\"          as month_end_spot_balance\n    ,\"\"          as cr_cum_avg_bal_over_cal_month\n    ,\"\"          as dr_cum_avg_bal_over_cal_month\n    ,\"\"          as cr_interest_flow_over_cal_month\n    ,\"\"          as dr_interest_flow_over_cal_month", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n     \"\"          as customer_name\n    ,\"\"          as sortcode_and_accountnumber\n    ,\"\"          as economic_code\n    ,\"\"          as industry_code\n    ,\"\"          as country_of_residence\n    ,\"\"          as source_platform_product_id\n    ,\"\"          as is_current_account\n    ,\"\"          as limit_amount\n    ,\"\"          as month_end_spot_balance\n    ,\"\"          as cr_cum_avg_bal_over_cal_month\n    ,\"\"          as dr_cum_avg_bal_over_cal_month\n    ,\"\"          as cr_interest_flow_over_cal_month\n    ,\"\"          as dr_interest_flow_over_cal_month", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.015610218048095703, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.367034Z", "completed_at": "2020-04-20T13:29:19.381449Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.381734Z", "completed_at": "2020-04-20T13:29:19.381742Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "test", "scenario01", "expected", "test_scenario01_expected_feed_general_ledger"], "unique_id": "seed.ep_cco.test_scenario01_expected_feed_general_ledger", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "test/scenario01/expected/test_scenario01_expected_feed_general_ledger.csv", "original_file_path": "data/test/scenario01/expected/test_scenario01_expected_feed_general_ledger.csv", "name": "test_scenario01_expected_feed_general_ledger", "resource_type": "seed", "alias": "test_scenario01_expected_feed_general_ledger", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {"credit_entered": "Numeric", "debit_entered": "Numeric", "currency": "String", "company": "Integer", "business_unit": "Integer", "cost_centre": "Integer", "origin": "String", "intercompany": "String", "project": "String", "nominal": "Integer", "as_of_date": "Date"}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco/data/test/scenario01/expected/test_scenario01_expected_feed_general_ledger.csv"}, "error": null, "status": null, "execution_time": 0.006646156311035156, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.382953Z", "completed_at": "2020-04-20T13:29:19.388589Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.388872Z", "completed_at": "2020-04-20T13:29:19.388878Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "test", "scenario01", "input", "test_scenario01_input_cbs_Account"], "unique_id": "seed.ep_cco.test_scenario01_input_cbs_Account", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "test/scenario01/input/test_scenario01_input_cbs_Account.csv", "original_file_path": "data/test/scenario01/input/test_scenario01_input_cbs_Account.csv", "name": "test_scenario01_input_cbs_Account", "resource_type": "seed", "alias": "test_scenario01_input_cbs_Account", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {"StatusUpdateTime": "Timestamp", "Currency": "String", "PermittedDenominations": "String", "AccountType": "String", "AccountSubType": "String", "Description": "String", "NickName": "String", "CreatedAt": "Timestamp", "UpdatedAt": "Timestamp"}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco/data/test/scenario01/input/test_scenario01_input_cbs_Account.csv"}, "error": null, "status": null, "execution_time": 0.007370948791503906, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.390001Z", "completed_at": "2020-04-20T13:29:19.396215Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.396581Z", "completed_at": "2020-04-20T13:29:19.396590Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "test", "scenario01", "input", "test_scenario01_input_cbs_AccountPaymentServicer"], "unique_id": "seed.ep_cco.test_scenario01_input_cbs_AccountPaymentServicer", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "test/scenario01/input/test_scenario01_input_cbs_AccountPaymentServicer.csv", "original_file_path": "data/test/scenario01/input/test_scenario01_input_cbs_AccountPaymentServicer.csv", "name": "test_scenario01_input_cbs_AccountPaymentServicer", "resource_type": "seed", "alias": "test_scenario01_input_cbs_AccountPaymentServicer", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {"AccountId": "String", "SchemaName": "String", "Identification": "Integer", "CreatedAt": "Timestamp", "UpdatedAt": "Timestamp"}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco/data/test/scenario01/input/test_scenario01_input_cbs_AccountPaymentServicer.csv"}, "error": null, "status": null, "execution_time": 0.006939888000488281, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.397876Z", "completed_at": "2020-04-20T13:29:19.403706Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.404024Z", "completed_at": "2020-04-20T13:29:19.404031Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "test", "scenario01", "input", "test_scenario01_input_cbs_AccountPostings"], "unique_id": "seed.ep_cco.test_scenario01_input_cbs_AccountPostings", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "test/scenario01/input/test_scenario01_input_cbs_AccountPostings.csv", "original_file_path": "data/test/scenario01/input/test_scenario01_input_cbs_AccountPostings.csv", "name": "test_scenario01_input_cbs_AccountPostings", "resource_type": "seed", "alias": "test_scenario01_input_cbs_AccountPostings", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {"id": "String", "transaction_id": "String", "create_request_id": "String", "client_id": "String", "client_batch_id": "String", "client_transaction_id": "String", "denomination": "String", "is_credit": "Boolean", "credit_amount": "Numeric", "debit_amount": "Numeric", "total": "Numeric", "account_address": "String", "account_id": "String", "asset": "String", "phase": "String", "creditor_account_number": "Integer", "creditor_bank_id": "String", "creditor_bank_id_code": "String", "debitor_account_number": "Integer", "debitor_bank_id": "String", "debitor_bank_id_code": "String", "value_timestamp": "Timestamp", "insertion_timestamp": "Timestamp", "error": "String", "is_dry_run": "Boolean", "status": "String", "event_id": "String", "capture_timestamp": "Timestamp"}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco/data/test/scenario01/input/test_scenario01_input_cbs_AccountPostings.csv"}, "error": null, "status": null, "execution_time": 0.007525920867919922, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.405402Z", "completed_at": "2020-04-20T13:29:19.411736Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.412084Z", "completed_at": "2020-04-20T13:29:19.412091Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "test", "scenario01", "input", "test_scenario01_input_cbs_Balance"], "unique_id": "seed.ep_cco.test_scenario01_input_cbs_Balance", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "test/scenario01/input/test_scenario01_input_cbs_Balance.csv", "original_file_path": "data/test/scenario01/input/test_scenario01_input_cbs_Balance.csv", "name": "test_scenario01_input_cbs_Balance", "resource_type": "seed", "alias": "test_scenario01_input_cbs_Balance", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {"AccountId": "String", "Type": "String", "Currency": "String", "Amount": "Float", "ChargeAmountIndicator": "String", "CreditDebitIndicator": "String", "CreatedAt": "Timestamp", "UpdatedAt": "Timestamp"}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": null, "seed_file_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco/data/test/scenario01/input/test_scenario01_input_cbs_Balance.csv"}, "error": null, "status": null, "execution_time": 0.0065038204193115234, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.413283Z", "completed_at": "2020-04-20T13:29:19.418824Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.419068Z", "completed_at": "2020-04-20T13:29:19.419073Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    AccountId as account_id,\n    SchemaName as scheme_name,    -- todo: BA to confirm the correct coulmn name - if this is schemaName(in spanner) or schemeName(in mapping spec) ??\n    cast(Identification as String) as identification,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    {{ref('src_cbs_AccountPaymentServicer')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_account_payment_servicer"], "unique_id": "model.ep_cco.ccdata_cbs_account_payment_servicer", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_account_payment_servicer.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_payment_servicer.sql", "name": "ccdata_cbs_account_payment_servicer", "resource_type": "model", "alias": "ccdata_cbs_account_payment_servicer", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cbs_AccountPaymentServicer"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cbs_AccountPaymentServicer"]}, "description": "Vault Payment Device Details", "columns": {"account_id": {"name": "account_id", "description": "Vault Account Id", "meta": {}, "data_type": null, "tags": []}, "schema_name": {"name": "schema_name", "description": "Payment Device", "meta": {}, "data_type": null, "tags": []}, "identification": {"name": "identification", "description": "Value for payment device linked to an account", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "Updated Date Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/cbs/ccdata_cbs_account_payment_servicer.yml", "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_account_payment_servicer.sql", "compiled": true, "compiled_sql": "SELECT\n    AccountId as account_id,\n    SchemaName as scheme_name,    -- todo: BA to confirm the correct coulmn name - if this is schemaName(in spanner) or schemeName(in mapping spec) ??\n    cast(Identification as String) as identification,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_AccountPaymentServicer`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    AccountId as account_id,\n    SchemaName as scheme_name,    -- todo: BA to confirm the correct coulmn name - if this is schemaName(in spanner) or schemeName(in mapping spec) ??\n    cast(Identification as String) as identification,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_AccountPaymentServicer`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.010673046112060547, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.420240Z", "completed_at": "2020-04-20T13:29:19.429894Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.430169Z", "completed_at": "2020-04-20T13:29:19.430176Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    acc.AccountId as account_id,\n    'lbg_dasa' as product_id,\n    '1.0' as product_version,\n    '' as primary_customer_id ,\n    '' as stakeholder_ids,\n --   aps.identification external_account_number, -- todo: Account number can be obtain after truncating first six digit of Identification from bld02_spanner_accounts_AccountPaymentServicer aps where aps.SchemeName = ' UK.OBIE.SortCodeExtAccountNumber' and aps.AccountId=Account.AccountId\n    cast(aps.Identification as String) as bank_id,  -- todo: first six digit of Identification from bld02_spanner_accounts_AccountPaymentServicer aps where aps.SchemeName = ' UK.OBIE.SortCodeExtAccountNumber' and aps.AccountId=Account.AccountId\n    acc.AccountType as account_type,\n    acc.AccountSubType as account_sub_type,\n    acc.Status as status,\n    acc.StatusUpdateTime as status_updated_time,\n    acc.NickName as nick_name,\n    acc.PermittedDenominations as permitted_denominations,\n    acc.Currency as currency,\n    acc.Description as description,\n    acc.CreatedAt as created_timestamp,\n    acc.UpdatedAt as updated_timestamp\nFROM {{ref('src_cbs_Account')}} acc LEFT JOIN\n     {{ref('src_cbs_AccountPaymentServicer')}} aps\n       ON\n      acc.AccountId = aps.AccountId\n      and aps.SchemaName = 'fps_sortcode'  -- todo: change the valid schemename", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_account"], "unique_id": "model.ep_cco.ccdata_cbs_account", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_account.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account.sql", "name": "ccdata_cbs_account", "resource_type": "model", "alias": "ccdata_cbs_account", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cbs_Account"], ["src_cbs_AccountPaymentServicer"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cbs_Account", "model.ep_cco.src_cbs_AccountPaymentServicer"]}, "description": "Account data from Vault", "columns": {"account_id": {"name": "account_id", "description": "Primary key for account (Vault Account Id)", "meta": {}, "data_type": null, "tags": []}, "product_id": {"name": "product_id", "description": "Foreign key to product table (Unique product Id associated with an account)", "meta": {}, "data_type": null, "tags": []}, "product_version": {"name": "product_version", "description": "Product version of associated product", "meta": {}, "data_type": null, "tags": []}, "stakeholder_ids": {"name": "stakeholder_ids", "description": "List of Customer Ids associated with an account", "meta": {}, "data_type": null, "tags": []}, "primary_customer_id": {"name": "primary_customer_id", "description": "Customer Id of primary account holder", "meta": {}, "data_type": null, "tags": []}, "account_type": {"name": "account_type", "description": "Type of Account - Personal Business", "meta": {}, "data_type": null, "tags": []}, "account_sub_type": {"name": "account_sub_type", "description": "Sub type of account - Savings, Current, Mortage etc.", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "Status of an Account", "meta": {}, "data_type": null, "tags": []}, "status_updated_time": {"name": "status_updated_time", "description": "Account status update timestamp", "meta": {}, "data_type": null, "tags": []}, "nick_name": {"name": "nick_name", "description": "Account nick name", "meta": {}, "data_type": null, "tags": []}, "permitted_denominations": {"name": "permitted_denominations", "description": "Denominations the account can hold balances in.", "meta": {}, "data_type": null, "tags": []}, "currency": {"name": "currency", "description": "Denomination the account having balances in.", "meta": {}, "data_type": null, "tags": []}, "description": {"name": "description", "description": "Account Description", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "Account Update Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/cbs/ccdata_cbs_account.yml", "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_account.sql", "compiled": true, "compiled_sql": "SELECT\n    acc.AccountId as account_id,\n    'lbg_dasa' as product_id,\n    '1.0' as product_version,\n    '' as primary_customer_id ,\n    '' as stakeholder_ids,\n --   aps.identification external_account_number, -- todo: Account number can be obtain after truncating first six digit of Identification from bld02_spanner_accounts_AccountPaymentServicer aps where aps.SchemeName = ' UK.OBIE.SortCodeExtAccountNumber' and aps.AccountId=Account.AccountId\n    cast(aps.Identification as String) as bank_id,  -- todo: first six digit of Identification from bld02_spanner_accounts_AccountPaymentServicer aps where aps.SchemeName = ' UK.OBIE.SortCodeExtAccountNumber' and aps.AccountId=Account.AccountId\n    acc.AccountType as account_type,\n    acc.AccountSubType as account_sub_type,\n    acc.Status as status,\n    acc.StatusUpdateTime as status_updated_time,\n    acc.NickName as nick_name,\n    acc.PermittedDenominations as permitted_denominations,\n    acc.Currency as currency,\n    acc.Description as description,\n    acc.CreatedAt as created_timestamp,\n    acc.UpdatedAt as updated_timestamp\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_Account` acc LEFT JOIN\n     `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_AccountPaymentServicer` aps\n       ON\n      acc.AccountId = aps.AccountId\n      and aps.SchemaName = 'fps_sortcode'  -- todo: change the valid schemename", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    acc.AccountId as account_id,\n    'lbg_dasa' as product_id,\n    '1.0' as product_version,\n    '' as primary_customer_id ,\n    '' as stakeholder_ids,\n --   aps.identification external_account_number, -- todo: Account number can be obtain after truncating first six digit of Identification from bld02_spanner_accounts_AccountPaymentServicer aps where aps.SchemeName = ' UK.OBIE.SortCodeExtAccountNumber' and aps.AccountId=Account.AccountId\n    cast(aps.Identification as String) as bank_id,  -- todo: first six digit of Identification from bld02_spanner_accounts_AccountPaymentServicer aps where aps.SchemeName = ' UK.OBIE.SortCodeExtAccountNumber' and aps.AccountId=Account.AccountId\n    acc.AccountType as account_type,\n    acc.AccountSubType as account_sub_type,\n    acc.Status as status,\n    acc.StatusUpdateTime as status_updated_time,\n    acc.NickName as nick_name,\n    acc.PermittedDenominations as permitted_denominations,\n    acc.Currency as currency,\n    acc.Description as description,\n    acc.CreatedAt as created_timestamp,\n    acc.UpdatedAt as updated_timestamp\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_Account` acc LEFT JOIN\n     `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_AccountPaymentServicer` aps\n       ON\n      acc.AccountId = aps.AccountId\n      and aps.SchemaName = 'fps_sortcode'  -- todo: change the valid schemename", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.019063234329223633, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.431793Z", "completed_at": "2020-04-20T13:29:19.449477Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.449773Z", "completed_at": "2020-04-20T13:29:19.449782Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT *\nFROM {{ ref('refdata_internal_account')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "ref", "src_ref_InternalAccount"], "unique_id": "model.ep_cco.src_ref_InternalAccount", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/ref/src_ref_InternalAccount.sql", "original_file_path": "models/src/ref/src_ref_InternalAccount.sql", "name": "src_ref_InternalAccount", "resource_type": "model", "alias": "src_ref_InternalAccount", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [["refdata_internal_account"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.ep_cco.refdata_internal_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/ref/src_ref_InternalAccount.sql", "compiled": true, "compiled_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`refdata_internal_account`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT *\nFROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`refdata_internal_account`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.009207010269165039, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.451370Z", "completed_at": "2020-04-20T13:29:19.459253Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.459539Z", "completed_at": "2020-04-20T13:29:19.459547Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n  ChartOfAccountIdentifier as ChartOfAccountId,\n  STRUCT( CBSBankIdentifier AS BankIdentifier,\n    CBSAccountNumber AS AccountNumber,\n    CBSProductCode AS ProductCode\n  ) AS CBS,\n  STRUCT(\n    GLCompanyCode AS CompanyCode,\n    GLBusinessUnitCode AS BusinessUnitCode,\n    GLCostCenterCode AS CostCenterCode,\n    GLOriginCode AS OriginCode,\n    GLIntercompanyCode AS IntercompanyCode,\n    GLProjectCode AS ProjectCode,\n    GLProductCode AS ProductCode,\n    GLNominalCode AS NominalCode,\n    GLCompanyDescription AS CompanyDescription,\n    GLBusinessUnitDescription AS BusinessUnitDescription,\n    GLCostCenterDescription AS CostCenterDescription,\n    GLOriginDescription AS OriginDescription,\n    GLIntercompanyDescription AS IntercompanyDescription,\n    GLProjectDescription AS ProjectDescription,\n    GLNominalDescription AS NominalDescription,\n    GLProductCodeDescription AS ProductCodeDescription\n  ) AS GL,\n  STRUCT (\n    LegacyCompanyCode AS CompanyCode,\n    LegacyResponsbilityCode AS ResponsbilityCode,\n    LegacyOriginCode AS OriginCode,\n    LegacyNominalCode AS NominalCode,\n    LegacyProjectCode AS ProjectCode,\n    LegacyProductCode AS ProductCode,\n    LegacyCompanyDescription AS CompanyDescription,\n    LegacyOriginDescription AS OriginDescription,\n    LegacyNominalDescription AS NominalDescription,\n    LegacyProjectDescription AS ProjectDescription,\n    LegacyProductDescription AS ProductDescription,\n    LegacyCostCenterDescription AS CostCenterDescription\n  ) AS LegacyWalker\nFROM\n    {{ref('refdata_general_ledger_coa')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "src", "ref", "src_ref_CoA"], "unique_id": "model.ep_cco.src_ref_CoA", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "src/ref/src_ref_CoA.sql", "original_file_path": "models/src/ref/src_ref_CoA.sql", "name": "src_ref_CoA", "resource_type": "model", "alias": "src_ref_CoA", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"src_data": "live", "src_bq_bld02_dataset": "ep_cco_bld2_bqd_euw2_sourcedata_spanner_20200402", "src_bq_int01_dataset": "xxxxx", "src_bq_prd01_dataset": "xxxxx", "src.cbs.account": "cbs_Account", "src.cust.brand": "cust_Brand", "src.cust.customer": "cust_Customer", "src.cust.address": "cust_Address", "src.cust.customer_address": "cust_CustomerAddress", "src.cust.customer_detail": "cust_CustomerDetail", "src.cust.portfolio_item": "cust_PortfolioItem", "src.cust.organisation": "cust_Organisation"}, "quoting": {}, "column_types": {}, "tags": ["Source"]}, "tags": ["Source"], "refs": [["refdata_general_ledger_coa"]], "sources": [], "depends_on": {"macros": [], "nodes": ["seed.ep_cco.refdata_general_ledger_coa"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/src/ref/src_ref_CoA.sql", "compiled": true, "compiled_sql": "SELECT\n  ChartOfAccountIdentifier as ChartOfAccountId,\n  STRUCT( CBSBankIdentifier AS BankIdentifier,\n    CBSAccountNumber AS AccountNumber,\n    CBSProductCode AS ProductCode\n  ) AS CBS,\n  STRUCT(\n    GLCompanyCode AS CompanyCode,\n    GLBusinessUnitCode AS BusinessUnitCode,\n    GLCostCenterCode AS CostCenterCode,\n    GLOriginCode AS OriginCode,\n    GLIntercompanyCode AS IntercompanyCode,\n    GLProjectCode AS ProjectCode,\n    GLProductCode AS ProductCode,\n    GLNominalCode AS NominalCode,\n    GLCompanyDescription AS CompanyDescription,\n    GLBusinessUnitDescription AS BusinessUnitDescription,\n    GLCostCenterDescription AS CostCenterDescription,\n    GLOriginDescription AS OriginDescription,\n    GLIntercompanyDescription AS IntercompanyDescription,\n    GLProjectDescription AS ProjectDescription,\n    GLNominalDescription AS NominalDescription,\n    GLProductCodeDescription AS ProductCodeDescription\n  ) AS GL,\n  STRUCT (\n    LegacyCompanyCode AS CompanyCode,\n    LegacyResponsbilityCode AS ResponsbilityCode,\n    LegacyOriginCode AS OriginCode,\n    LegacyNominalCode AS NominalCode,\n    LegacyProjectCode AS ProjectCode,\n    LegacyProductCode AS ProductCode,\n    LegacyCompanyDescription AS CompanyDescription,\n    LegacyOriginDescription AS OriginDescription,\n    LegacyNominalDescription AS NominalDescription,\n    LegacyProjectDescription AS ProjectDescription,\n    LegacyProductDescription AS ProductDescription,\n    LegacyCostCenterDescription AS CostCenterDescription\n  ) AS LegacyWalker\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`refdata_general_ledger_coa`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n  ChartOfAccountIdentifier as ChartOfAccountId,\n  STRUCT( CBSBankIdentifier AS BankIdentifier,\n    CBSAccountNumber AS AccountNumber,\n    CBSProductCode AS ProductCode\n  ) AS CBS,\n  STRUCT(\n    GLCompanyCode AS CompanyCode,\n    GLBusinessUnitCode AS BusinessUnitCode,\n    GLCostCenterCode AS CostCenterCode,\n    GLOriginCode AS OriginCode,\n    GLIntercompanyCode AS IntercompanyCode,\n    GLProjectCode AS ProjectCode,\n    GLProductCode AS ProductCode,\n    GLNominalCode AS NominalCode,\n    GLCompanyDescription AS CompanyDescription,\n    GLBusinessUnitDescription AS BusinessUnitDescription,\n    GLCostCenterDescription AS CostCenterDescription,\n    GLOriginDescription AS OriginDescription,\n    GLIntercompanyDescription AS IntercompanyDescription,\n    GLProjectDescription AS ProjectDescription,\n    GLNominalDescription AS NominalDescription,\n    GLProductCodeDescription AS ProductCodeDescription\n  ) AS GL,\n  STRUCT (\n    LegacyCompanyCode AS CompanyCode,\n    LegacyResponsbilityCode AS ResponsbilityCode,\n    LegacyOriginCode AS OriginCode,\n    LegacyNominalCode AS NominalCode,\n    LegacyProjectCode AS ProjectCode,\n    LegacyProductCode AS ProductCode,\n    LegacyCompanyDescription AS CompanyDescription,\n    LegacyOriginDescription AS OriginDescription,\n    LegacyNominalDescription AS NominalDescription,\n    LegacyProjectDescription AS ProjectDescription,\n    LegacyProductDescription AS ProductDescription,\n    LegacyCostCenterDescription AS CostCenterDescription\n  ) AS LegacyWalker\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`refdata_general_ledger_coa`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.00993204116821289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.461073Z", "completed_at": "2020-04-20T13:29:19.469742Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.470040Z", "completed_at": "2020-04-20T13:29:19.470049Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    ''          as balance_id,  -- todo: this is auto generated field\n    AccountId   as account_id,\n    Type        as type,\n    CreditDebitIndicator as credit_debit_indicator,\n    Amount as amount,\n    Currency as currency,\n    '' as account_address,          -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as asset,                    -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as postings_batch_id,        -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as updated_postings_batch_id,-- todo: flagged as gap in the spec: planned to be available in proto\n    ChargeAmountIndicator as charge_amount_indicator,\n    CreatedAt as created_timestamp ,\n    UpdatedAt as updated_timestamp\nFROM\n    {{ref('src_cbs_Balance')}} bal\nWHERE\n    type = 'POSTING_PHASE_COMMITTED' --question: missing in the spec: filtering the balances for commited only", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_balance"], "unique_id": "model.ep_cco.ccdata_cbs_balance", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_balance.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_balance.sql", "name": "ccdata_cbs_balance", "resource_type": "model", "alias": "ccdata_cbs_balance", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cbs_Balance"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cbs_Balance"]}, "description": "Balance data from Vault", "columns": {"balance_id": {"name": "balance_id", "description": "Unique Id of balance associated with an account", "meta": {}, "data_type": null, "tags": []}, "account_id": {"name": "account_id", "description": "Foreign key to account table (Unique Vault Account Id associated with an account)", "meta": {}, "data_type": null, "tags": []}, "type": {"name": "type", "description": "Balance Type", "meta": {}, "data_type": null, "tags": []}, "credit_debit_indicator": {"name": "credit_debit_indicator", "description": "Balance Credit/Debit flag", "meta": {}, "data_type": null, "tags": []}, "amount": {"name": "amount", "description": "The amount is the net value of the balance.", "meta": {}, "data_type": null, "tags": []}, "currency": {"name": "currency", "description": "Denomination the account having balances in.", "meta": {}, "data_type": null, "tags": []}, "account_address": {"name": "account_address", "description": "The account address represents one partition of the total balances held on the account.", "meta": {}, "data_type": null, "tags": []}, "asset": {"name": "asset", "description": "Foreign key to Postings Instruction table - The asset in which the balance is held.", "meta": {}, "data_type": null, "tags": []}, "postings_batch_id": {"name": "postings_batch_id", "description": "Foreign key to Postings Instruction table - The ID of the logical posting instruction batch which yielded this balance.", "meta": {}, "data_type": null, "tags": []}, "updated_postings_batch_id": {"name": "updated_postings_batch_id", "description": "Foreign key to Postings Instruction table - The ID of the logical posting instruction batch which yielded this balance.", "meta": {}, "data_type": null, "tags": []}, "charge_amount_indicator": {"name": "charge_amount_indicator", "description": "OB concept to define charges like FX charges etc.", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "Account Update Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/cbs/ccdata_cbs_balance.yml", "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_balance.sql", "compiled": true, "compiled_sql": "SELECT\n    ''          as balance_id,  -- todo: this is auto generated field\n    AccountId   as account_id,\n    Type        as type,\n    CreditDebitIndicator as credit_debit_indicator,\n    Amount as amount,\n    Currency as currency,\n    '' as account_address,          -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as asset,                    -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as postings_batch_id,        -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as updated_postings_batch_id,-- todo: flagged as gap in the spec: planned to be available in proto\n    ChargeAmountIndicator as charge_amount_indicator,\n    CreatedAt as created_timestamp ,\n    UpdatedAt as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_Balance` bal\nWHERE\n    type = 'POSTING_PHASE_COMMITTED' --question: missing in the spec: filtering the balances for commited only", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    ''          as balance_id,  -- todo: this is auto generated field\n    AccountId   as account_id,\n    Type        as type,\n    CreditDebitIndicator as credit_debit_indicator,\n    Amount as amount,\n    Currency as currency,\n    '' as account_address,          -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as asset,                    -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as postings_batch_id,        -- todo: flagged as gap in the spec: planned to be available in proto\n    '' as updated_postings_batch_id,-- todo: flagged as gap in the spec: planned to be available in proto\n    ChargeAmountIndicator as charge_amount_indicator,\n    CreatedAt as created_timestamp ,\n    UpdatedAt as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_Balance` bal\nWHERE\n    type = 'POSTING_PHASE_COMMITTED' --question: missing in the spec: filtering the balances for commited only", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.014320850372314453, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.471268Z", "completed_at": "2020-04-20T13:29:19.484442Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.484757Z", "completed_at": "2020-04-20T13:29:19.484776Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n        PostingsInstructionId as postings_instruction_id,\n        PostingsId as postings_id,\n        PostingsBatchId as postings_batch_id,\n        InstructionType as instruction_type,\n        IsCredit as is_credit,\n        Amount as amount,\n        Currency as currency,\n        AccountId as account_id,\n        '' as cbs_bank_id,  -- todo: cbs_bank_id is not part of mapping spec /LDM\n        AccountAddress as account_address,\n        Asset as asset,\n        Phase as phase,\n        CreatedAt as created_timestamp,\n        UpdatedAt as updated_timestamp\n    FROM\n        {{ref('src_cbs_PostingsInstructions')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_postings_instructions"], "unique_id": "model.ep_cco.ccdata_cbs_postings_instructions", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_postings_instructions.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.sql", "name": "ccdata_cbs_postings_instructions", "resource_type": "model", "alias": "ccdata_cbs_postings_instructions", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cbs_PostingsInstructions"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cbs_PostingsInstructions"]}, "description": "This Entity captures posting Credit/Debit details of a Transaction.", "columns": {"postings_instruction_id": {"name": "postings_instruction_id", "description": "Unique Identifier for type of posting instruction under PostingBatch", "meta": {}, "data_type": null, "tags": []}, "postings_id": {"name": "postings_id", "description": "To identify credit or debit entries under a posting instruction", "meta": {}, "data_type": null, "tags": []}, "postings_batch_id": {"name": "postings_batch_id", "description": "Unique Id to identify PostingsBatch", "meta": {}, "data_type": null, "tags": []}, "transaction_id": {"name": "transaction_id", "description": "Unique Id to identify associated transaction", "meta": {}, "data_type": null, "tags": []}, "account_id": {"name": "account_id", "description": "Vault Account Id", "meta": {}, "data_type": null, "tags": []}, "instruction_type": {"name": "instruction_type", "description": "Type of posting instruction", "meta": {}, "data_type": null, "tags": []}, "is_credit": {"name": "is_credit", "description": "flag to identify credit or debit", "meta": {}, "data_type": null, "tags": []}, "amount": {"name": "amount", "description": "Amount of Credit or Debit", "meta": {}, "data_type": null, "tags": []}, "currency": {"name": "currency", "description": "Denomination of an amount", "meta": {}, "data_type": null, "tags": []}, "credit_debit_indicator": {"name": "credit_debit_indicator", "description": "Posting Credit/Debit flag", "meta": {}, "data_type": null, "tags": []}, "account_address": {"name": "account_address", "description": "The account address represents one partition of the total balances held on the account.", "meta": {}, "data_type": null, "tags": []}, "asset": {"name": "asset", "description": "The asset in which the balance is held.", "meta": {}, "data_type": null, "tags": []}, "phase": {"name": "phase", "description": "PostingPhase characterises the phase of a Posting.Enum", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "Update Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_postings_instructions.sql", "compiled": true, "compiled_sql": "SELECT\n        PostingsInstructionId as postings_instruction_id,\n        PostingsId as postings_id,\n        PostingsBatchId as postings_batch_id,\n        InstructionType as instruction_type,\n        IsCredit as is_credit,\n        Amount as amount,\n        Currency as currency,\n        AccountId as account_id,\n        '' as cbs_bank_id,  -- todo: cbs_bank_id is not part of mapping spec /LDM\n        AccountAddress as account_address,\n        Asset as asset,\n        Phase as phase,\n        CreatedAt as created_timestamp,\n        UpdatedAt as updated_timestamp\n    FROM\n        `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_PostingsInstructions`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n        PostingsInstructionId as postings_instruction_id,\n        PostingsId as postings_id,\n        PostingsBatchId as postings_batch_id,\n        InstructionType as instruction_type,\n        IsCredit as is_credit,\n        Amount as amount,\n        Currency as currency,\n        AccountId as account_id,\n        '' as cbs_bank_id,  -- todo: cbs_bank_id is not part of mapping spec /LDM\n        AccountAddress as account_address,\n        Asset as asset,\n        Phase as phase,\n        CreatedAt as created_timestamp,\n        UpdatedAt as updated_timestamp\n    FROM\n        `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_PostingsInstructions`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.016874074935913086, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.486749Z", "completed_at": "2020-04-20T13:29:19.501970Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.502239Z", "completed_at": "2020-04-20T13:29:19.502246Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    TransactionId as transaction_id,\n    AccountId as account_id,\n    BankTransactionCode as bank_transaction_code,\n    BankTransactionSubCode as bank_transaction_sub_code,\n    BookingTimestamp as booking_timestamp,\n    CaptureTimestamp as capture_timestamp,\n    ChargeAmount as charge_amount,\n    ContractIdentification as contract_identification,\n    CreatedAt as created_timestamp,\n    CreditDebitIndicator as credit_debit_indicator,\n    Description as description,\n    EventId as event_id,\n    EventTimestamp as event_time_stamp,\n    ExchangeRate as exchange_rate,\n    InstructedAmountId as instructed_amount,  -- todo: Gap in mapping spec: spanner field name is (InstrcutedAmountId) in LDM/MappingSpec(InstructedAmount)\n    IsCredit as is_credit,\n    MerchantCatCode as merchant_cat_code,\n    MerchantName as merchant_name,\n    PayeeId as payee_id,\n    PaymentOrderId as payment_order_id,\n    PostingInstructionBatchIds as posting_instruction_batch_ids,\n    ProprietaryBankTxCode as proprietary_bank_tx_code,\n    ProprietaryBankTxCodeIssuer as proprietary_bank_tx_code_issuer,\n    QuotationDate as quotation_date,\n    Reference as reference,\n    SourceCurrency as source_currency,\n    StatementReference as statement_reference,\n    Status as status,\n    StatusReason as status_reason,\n    TargetCurrency as target_currency,\n    TransactionInformation as transaction_information,\n    TransactionReference as transaction_reference,\n    TransactionType as transaction_type,\n    UnitCurrency as unit_currency,\n    Updates as updates,\n    UpdatedTimestamp AS Updated_Timestamp,  -- todo: mapping spec has duplicate field updatedAt and updated_Timestamp\n    ValueTimestamp as value_timestamp\nFROM\n    {{ref('src_cbs_Transaction')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_transaction"], "unique_id": "model.ep_cco.ccdata_cbs_transaction", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_transaction.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_transaction.sql", "name": "ccdata_cbs_transaction", "resource_type": "model", "alias": "ccdata_cbs_transaction", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cbs_Transaction"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cbs_Transaction"]}, "description": "Entity identifies customer's account", "columns": {"transaction_id": {"name": "transaction_id", "description": "Unique Id to identify transaction", "meta": {}, "data_type": null, "tags": []}, "account_id": {"name": "account_id", "description": "Foreign key to account table (Vault Account Id)", "meta": {}, "data_type": null, "tags": []}, "bank_transaction_code": {"name": "bank_transaction_code", "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry. Code specifies the family within a domain.", "meta": {}, "data_type": null, "tags": []}, "bank_transaction_sub_code": {"name": "bank_transaction_sub_code", "description": "Set of elements used to fully identify the type of underlying transaction resulting in an entry. SubCode specifies the sub-product family within a specific family.", "meta": {}, "data_type": null, "tags": []}, "booking_timestamp": {"name": "booking_timestamp", "description": "Date and time when a transaction entry is posted to an account on the account servicer's books. (Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.)", "meta": {}, "data_type": null, "tags": []}, "capture_timestamp": {"name": "capture_timestamp", "description": "Same as Booking Timestamp, Timestamp when the transaction was captured by the vault.", "meta": {}, "data_type": null, "tags": []}, "charge_amount": {"name": "charge_amount", "description": "Transaction charges to be paid by the charge bearer.", "meta": {}, "data_type": null, "tags": []}, "contract_identification": {"name": "contract_identification", "description": "Unique identification to unambiguously identify the foreign exchange contract.", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "credit_debit_indicator": {"name": "credit_debit_indicator", "description": "Indicates whether the transaction is a credit or a debit entry.", "meta": {}, "data_type": null, "tags": []}, "description": {"name": "description", "description": "Same as a reference, to align DB schema with OB standards.\u00a0This would be null as we don't have this data in topic Json.", "meta": {}, "data_type": null, "tags": []}, "event_id": {"name": "event_id", "description": "Event Id, typically this is when a message was posted by Vault to the Kafka topic.", "meta": {}, "data_type": null, "tags": []}, "event_timestamp": {"name": "event_timestamp", "description": "The timestamp of the event, typically this is when a message was posted by Vault to the Kafka topic.", "meta": {}, "data_type": null, "tags": []}, "exchange_rate": {"name": "exchange_rate", "description": "Factor used to convert an amount from one currency into another.", "meta": {}, "data_type": null, "tags": []}, "instructed_amount": {"name": "instructed_amount", "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.", "meta": {}, "data_type": null, "tags": []}, "is_credit": {"name": "is_credit", "description": "Indicates whether the transaction is a credit or a debit entry.", "meta": {}, "data_type": null, "tags": []}, "merchant_cat_code": {"name": "merchant_cat_code", "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.", "meta": {}, "data_type": null, "tags": []}, "merchant_name": {"name": "merchant_name", "description": "Indicates whether the transaction is a credit or a debit entry.Name of the merchant according to the point of sale device.", "meta": {}, "data_type": null, "tags": []}, "payee_id": {"name": "payee_id", "description": "If not null, it will map to payee table.", "meta": {}, "data_type": null, "tags": []}, "payment_order_id": {"name": "payment_order_id", "description": "If not null, it will map to payment order table.", "meta": {}, "data_type": null, "tags": []}, "posting_instruction_batch_ids": {"name": "posting_instruction_batch_ids", "description": "This is a list of Posting Instructions Ids/JournalEntryBatchId  stored as an array.", "meta": {}, "data_type": null, "tags": []}, "proprietary_bank_tx_code": {"name": "proprietary_bank_tx_code", "description": "Set of elements to fully identify a proprietary bank transaction code. Proprietary bank transaction code to identify the underlying transaction.", "meta": {}, "data_type": null, "tags": []}, "proprietary_bank_tx_code_issuer": {"name": "proprietary_bank_tx_code_issuer", "description": "Identification of the issuer of the proprietary bank transaction code.", "meta": {}, "data_type": null, "tags": []}, "quotation_date": {"name": "quotation_date", "description": "Date and time at which an exchange rate is quoted.", "meta": {}, "data_type": null, "tags": []}, "reference": {"name": "reference", "description": "User reference", "meta": {}, "data_type": null, "tags": []}, "source_currency": {"name": "source_currency", "description": "Currency from which an amount is to be converted in a currency conversion.", "meta": {}, "data_type": null, "tags": []}, "statement_reference": {"name": "statement_reference", "description": "Unique reference for the statement. This reference may be optionally populated if available.", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "Status of a transaction entry on the books of the account servicer.", "meta": {}, "data_type": null, "tags": []}, "status_reason": {"name": "status_reason", "description": "Rejection code in case of rejected transaction", "meta": {}, "data_type": null, "tags": []}, "target_currency": {"name": "target_currency", "description": "Currency into which an amount is to be converted in a currency conversion.", "meta": {}, "data_type": null, "tags": []}, "transaction_information": {"name": "transaction_information", "description": "Further details of the transaction. This is the transaction narrative, which is unstructured text.", "meta": {}, "data_type": null, "tags": []}, "transaction_reference": {"name": "transaction_reference", "description": "Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.", "meta": {}, "data_type": null, "tags": []}, "transaction_type": {"name": "transaction_type", "description": "E.g. payment, continuous payment authority payment, return, refund, cash advance, ATM withdrawal, etc.", "meta": {}, "data_type": null, "tags": []}, "unit_currency": {"name": "unit_currency", "description": "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.", "meta": {}, "data_type": null, "tags": []}, "updates": {"name": "updates", "description": "No of updates happened on the same transaction, mapped to kafkaa change_id", "meta": {}, "data_type": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "Update Timestamp", "meta": {}, "data_type": null, "tags": []}, "value_timestamp": {"name": "value_timestamp", "description": "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry. (If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/cbs/ccdata_cbs_transaction.yml", "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_transaction.sql", "compiled": true, "compiled_sql": "SELECT\n    TransactionId as transaction_id,\n    AccountId as account_id,\n    BankTransactionCode as bank_transaction_code,\n    BankTransactionSubCode as bank_transaction_sub_code,\n    BookingTimestamp as booking_timestamp,\n    CaptureTimestamp as capture_timestamp,\n    ChargeAmount as charge_amount,\n    ContractIdentification as contract_identification,\n    CreatedAt as created_timestamp,\n    CreditDebitIndicator as credit_debit_indicator,\n    Description as description,\n    EventId as event_id,\n    EventTimestamp as event_time_stamp,\n    ExchangeRate as exchange_rate,\n    InstructedAmountId as instructed_amount,  -- todo: Gap in mapping spec: spanner field name is (InstrcutedAmountId) in LDM/MappingSpec(InstructedAmount)\n    IsCredit as is_credit,\n    MerchantCatCode as merchant_cat_code,\n    MerchantName as merchant_name,\n    PayeeId as payee_id,\n    PaymentOrderId as payment_order_id,\n    PostingInstructionBatchIds as posting_instruction_batch_ids,\n    ProprietaryBankTxCode as proprietary_bank_tx_code,\n    ProprietaryBankTxCodeIssuer as proprietary_bank_tx_code_issuer,\n    QuotationDate as quotation_date,\n    Reference as reference,\n    SourceCurrency as source_currency,\n    StatementReference as statement_reference,\n    Status as status,\n    StatusReason as status_reason,\n    TargetCurrency as target_currency,\n    TransactionInformation as transaction_information,\n    TransactionReference as transaction_reference,\n    TransactionType as transaction_type,\n    UnitCurrency as unit_currency,\n    Updates as updates,\n    UpdatedTimestamp AS Updated_Timestamp,  -- todo: mapping spec has duplicate field updatedAt and updated_Timestamp\n    ValueTimestamp as value_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_Transaction`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    TransactionId as transaction_id,\n    AccountId as account_id,\n    BankTransactionCode as bank_transaction_code,\n    BankTransactionSubCode as bank_transaction_sub_code,\n    BookingTimestamp as booking_timestamp,\n    CaptureTimestamp as capture_timestamp,\n    ChargeAmount as charge_amount,\n    ContractIdentification as contract_identification,\n    CreatedAt as created_timestamp,\n    CreditDebitIndicator as credit_debit_indicator,\n    Description as description,\n    EventId as event_id,\n    EventTimestamp as event_time_stamp,\n    ExchangeRate as exchange_rate,\n    InstructedAmountId as instructed_amount,  -- todo: Gap in mapping spec: spanner field name is (InstrcutedAmountId) in LDM/MappingSpec(InstructedAmount)\n    IsCredit as is_credit,\n    MerchantCatCode as merchant_cat_code,\n    MerchantName as merchant_name,\n    PayeeId as payee_id,\n    PaymentOrderId as payment_order_id,\n    PostingInstructionBatchIds as posting_instruction_batch_ids,\n    ProprietaryBankTxCode as proprietary_bank_tx_code,\n    ProprietaryBankTxCodeIssuer as proprietary_bank_tx_code_issuer,\n    QuotationDate as quotation_date,\n    Reference as reference,\n    SourceCurrency as source_currency,\n    StatementReference as statement_reference,\n    Status as status,\n    StatusReason as status_reason,\n    TargetCurrency as target_currency,\n    TransactionInformation as transaction_information,\n    TransactionReference as transaction_reference,\n    TransactionType as transaction_type,\n    UnitCurrency as unit_currency,\n    Updates as updates,\n    UpdatedTimestamp AS Updated_Timestamp,  -- todo: mapping spec has duplicate field updatedAt and updated_Timestamp\n    ValueTimestamp as value_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_Transaction`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.026365995407104492, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.503804Z", "completed_at": "2020-04-20T13:29:19.528648Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.528951Z", "completed_at": "2020-04-20T13:29:19.528960Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    AccountId as account_id,\n    AccountKeyDesc as account_key_desc,\n    AccountValFloat as account_val_float,\n    AccountValStr as account_val_str,\n    AccountValDateTime as account_val_date_time,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    {{ref('src_cbs_AccountAttrKeyVal')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_account_attr_key_val"], "unique_id": "model.ep_cco.ccdata_cbs_account_attr_key_val", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_account_attr_key_val.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_attr_key_val.sql", "name": "ccdata_cbs_account_attr_key_val", "resource_type": "model", "alias": "ccdata_cbs_account_attr_key_val", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cbs_AccountAttrKeyVal"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cbs_AccountAttrKeyVal"]}, "description": "Vault Account Id", "columns": {"account_id": {"name": "account_id", "description": "Primary key for account", "meta": {}, "data_type": null, "tags": []}, "account_key_desc": {"name": "account_key_desc", "description": "Instance param val keys", "meta": {}, "data_type": null, "tags": []}, "account_val_float": {"name": "account_val_float", "description": "Instance Param Value having float as type", "meta": {}, "data_type": null, "tags": []}, "account_val_str": {"name": "account_val_str", "description": "Instance Param Value having string as type", "meta": {}, "data_type": null, "tags": []}, "account_val_date_time": {"name": "account_val_date_time", "description": "Instance Param Value having datetime as type", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Created Date Time Stamp", "meta": {}, "data_type": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "Updated Date Time Stamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/cbs/ccdata_cbs_account_attr_key_val.yml", "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_account_attr_key_val.sql", "compiled": true, "compiled_sql": "SELECT\n    AccountId as account_id,\n    AccountKeyDesc as account_key_desc,\n    AccountValFloat as account_val_float,\n    AccountValStr as account_val_str,\n    AccountValDateTime as account_val_date_time,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_AccountAttrKeyVal`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    AccountId as account_id,\n    AccountKeyDesc as account_key_desc,\n    AccountValFloat as account_val_float,\n    AccountValStr as account_val_str,\n    AccountValDateTime as account_val_date_time,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_AccountAttrKeyVal`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.01266622543334961, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.530445Z", "completed_at": "2020-04-20T13:29:19.541823Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.542126Z", "completed_at": "2020-04-20T13:29:19.542136Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n        pob.PostingsBatchId as postings_batch_id,\n        txn.TransactionId as transaction_id,  -- todo: flagged as gap in the spec: for one its picked from Transaction table\n        '' as status,                         -- todo: Missing in the spec and Spanner: defaulting this to null as this is planned to be part of proto\n        '' as value_date,                     -- todo: Missing in the spec and Spanner: defaulting this to null as this is planned to be part of proto\n        pob.CreatedAt as created_timestamp,\n        pob.UpdatedAt as updated_timestamp\n    FROM\n        {{ref('src_cbs_PostingsBatch')}} pob,\n        {{ref('src_cbs_PostingsInstructions')}} pbi,\n        {{ref('src_cbs_Transaction')}} txn\n    WHERE\n        pob.PostingsBatchId = pbi.PostingsBatchId\n        and pbi.AccountId = txn.AccountId", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_postings_batch"], "unique_id": "model.ep_cco.ccdata_cbs_postings_batch", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_postings_batch.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_batch.sql", "name": "ccdata_cbs_postings_batch", "resource_type": "model", "alias": "ccdata_cbs_postings_batch", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cbs_PostingsBatch"], ["src_cbs_PostingsInstructions"], ["src_cbs_Transaction"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cbs_PostingsBatch", "model.ep_cco.src_cbs_PostingsInstructions", "model.ep_cco.src_cbs_Transaction"]}, "description": "This Entity captures posting Credit/Debit details of a Transaction.", "columns": {"postings_batch_id": {"name": "postings_batch_id", "description": "Unique Identifier for PostingBatch", "meta": {}, "data_type": null, "tags": []}, "transaction_id": {"name": "transaction_id", "description": "Id to identify transactionId which caused this posting", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "The status of the posting instruction batch.", "meta": {}, "data_type": null, "tags": []}, "value_date": {"name": "value_date", "description": "Specifies the time at which all committed postings of this batch's posting instructions should affect balances.", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Specifies the time this posting instruction batch was inserted in Vault.", "meta": {}, "data_type": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "Specifies the time this posting instruction batch was updated in Vault.", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/cbs/ccdata_cbs_postings_batch.yml", "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_postings_batch.sql", "compiled": true, "compiled_sql": "SELECT\n        pob.PostingsBatchId as postings_batch_id,\n        txn.TransactionId as transaction_id,  -- todo: flagged as gap in the spec: for one its picked from Transaction table\n        '' as status,                         -- todo: Missing in the spec and Spanner: defaulting this to null as this is planned to be part of proto\n        '' as value_date,                     -- todo: Missing in the spec and Spanner: defaulting this to null as this is planned to be part of proto\n        pob.CreatedAt as created_timestamp,\n        pob.UpdatedAt as updated_timestamp\n    FROM\n        `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_PostingsBatch` pob,\n        `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_PostingsInstructions` pbi,\n        `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_Transaction` txn\n    WHERE\n        pob.PostingsBatchId = pbi.PostingsBatchId\n        and pbi.AccountId = txn.AccountId", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n        pob.PostingsBatchId as postings_batch_id,\n        txn.TransactionId as transaction_id,  -- todo: flagged as gap in the spec: for one its picked from Transaction table\n        '' as status,                         -- todo: Missing in the spec and Spanner: defaulting this to null as this is planned to be part of proto\n        '' as value_date,                     -- todo: Missing in the spec and Spanner: defaulting this to null as this is planned to be part of proto\n        pob.CreatedAt as created_timestamp,\n        pob.UpdatedAt as updated_timestamp\n    FROM\n        `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_PostingsBatch` pob,\n        `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_PostingsInstructions` pbi,\n        `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_Transaction` txn\n    WHERE\n        pob.PostingsBatchId = pbi.PostingsBatchId\n        and pbi.AccountId = txn.AccountId", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.014999151229858398, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.543712Z", "completed_at": "2020-04-20T13:29:19.557348Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.557637Z", "completed_at": "2020-04-20T13:29:19.557644Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    BrandId as brand_id,\n    OrgId as org_id,\n    Code as code,\n    Name as name,\n    Description as description,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    {{ref('src_cust_Brand')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "customer", "ccdata_customer_brand"], "unique_id": "model.ep_cco.ccdata_customer_brand", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/customer/ccdata_customer_brand.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_brand.sql", "name": "ccdata_customer_brand", "resource_type": "model", "alias": "ccdata_customer_brand", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cust_Brand"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cust_Brand"]}, "description": "Customer Brand", "columns": {"brand_id": {"name": "brand_id", "description": "Unique Id to identify Customer", "meta": {}, "data_type": null, "tags": []}, "org_id": {"name": "org_id", "description": "Unique Id to identify Organisation", "meta": {}, "data_type": null, "tags": []}, "code": {"name": "code", "description": "Brand Code - not_null", "meta": {}, "data_type": null, "tags": []}, "name": {"name": "name", "description": "Brand Name - not_null", "meta": {}, "data_type": null, "tags": []}, "description": {"name": "description", "description": "Brand Description", "meta": {}, "data_type": null, "tags": []}, "created_by": {"name": "created_by", "description": "Created By for Audit", "meta": {}, "data_type": null, "tags": []}, "last_Modified_by": {"name": "last_Modified_by", "description": "Updated By for Audit", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "last_modified_timestamp": {"name": "last_modified_timestamp", "description": "Updation Date Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/customer/ccdata_customer_brand.yml", "build_path": "target/compiled/ep_cco/ccdata/customer/ccdata_customer_brand.sql", "compiled": true, "compiled_sql": "SELECT\n    BrandId as brand_id,\n    OrgId as org_id,\n    Code as code,\n    Name as name,\n    Description as description,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_Brand`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    BrandId as brand_id,\n    OrgId as org_id,\n    Code as code,\n    Name as name,\n    Description as description,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_Brand`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.01359105110168457, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.559322Z", "completed_at": "2020-04-20T13:29:19.571523Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.571848Z", "completed_at": "2020-04-20T13:29:19.571857Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    CustomerId as customer_id,\n    OrgId as org_id,\n    CustomerType as customer_type,\n    Status as status,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    {{ref('src_cust_Customer')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "customer", "ccdata_customer"], "unique_id": "model.ep_cco.ccdata_customer", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/customer/ccdata_customer.sql", "original_file_path": "models/ccdata/customer/ccdata_customer.sql", "name": "ccdata_customer", "resource_type": "model", "alias": "ccdata_customer", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cust_Customer"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cust_Customer"]}, "description": "Customer", "columns": {"customer_id": {"name": "customer_id", "description": "Unique Id to identify Customer", "meta": {}, "data_type": null, "tags": []}, "org_id": {"name": "org_id", "description": "Unique Id to identify Organisation", "meta": {}, "data_type": null, "tags": []}, "customer_type": {"name": "customer_type", "description": "Type of Customer - not_null", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "Customer status - not_null", "meta": {}, "data_type": null, "tags": []}, "created_by": {"name": "created_by", "description": "Created By for Audit", "meta": {}, "data_type": null, "tags": []}, "last_Modified_by": {"name": "last_Modified_by", "description": "Updated By for Audit", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "last_modified_timestamp": {"name": "last_modified_timestamp", "description": "Updation Date Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/customer/ccdata_customer.yml", "build_path": "target/compiled/ep_cco/ccdata/customer/ccdata_customer.sql", "compiled": true, "compiled_sql": "SELECT\n    CustomerId as customer_id,\n    OrgId as org_id,\n    CustomerType as customer_type,\n    Status as status,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_Customer`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    CustomerId as customer_id,\n    OrgId as org_id,\n    CustomerType as customer_type,\n    Status as status,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_Customer`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.013736963272094727, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.573398Z", "completed_at": "2020-04-20T13:29:19.585862Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.586170Z", "completed_at": "2020-04-20T13:29:19.586176Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    ca.CustomerAddressId as customer_address_Id,\n    ca.CustomerId as customer_id,\n    ca.BrandId as brand_id,\n    ca.AddressType as address_type,\n    ad.HouseNumber as house_number,\n    ad.FirstLine as first_line,\n    ad.SecondLine as second_line,\n    ad.ThirdLine as third_line,\n    ad.FourthLine as fourth_line,\n    ad.FifthLine as fifth_line,\n    ad.PostalCode as postal_code,\n    ad.CountryCode as country_code,\n    ca.CreatedBy as created_by,\n    ca.LastModifiedBy as last_modified_by,\n    ca.CreatedTimestamp as created_timestamp,\n    ca.LastModifiedTimestamp as updated_timestamp\nFROM\n    {{ref('src_cust_CustomerAddress')}} ca ,\n    {{ref('src_cust_Address')}} ad\nWHERE\n    ca.CustomerAddressId = ad.AddressId", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "customer", "ccdata_customer_address"], "unique_id": "model.ep_cco.ccdata_customer_address", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/customer/ccdata_customer_address.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_address.sql", "name": "ccdata_customer_address", "resource_type": "model", "alias": "ccdata_customer_address", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cust_CustomerAddress"], ["src_cust_Address"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cust_CustomerAddress", "model.ep_cco.src_cust_Address"]}, "description": "Customer Address", "columns": {"customer_address_id": {"name": "customer_address_id", "description": "Unique Id to identify customer's address", "meta": {}, "data_type": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Unique Customer Id", "meta": {}, "data_type": null, "tags": []}, "brand_id": {"name": "brand_id", "description": "Unique Id to identify Brand", "meta": {}, "data_type": null, "tags": []}, "address_type": {"name": "address_type", "description": "Type of address - not_null", "meta": {}, "data_type": null, "tags": []}, "house_number": {"name": "house_number", "description": "Customer Address details", "meta": {}, "data_type": null, "tags": []}, "first_line": {"name": "first_line", "description": "Customer Address details", "meta": {}, "data_type": null, "tags": []}, "second_line": {"name": "second_line", "description": "Customer Address details", "meta": {}, "data_type": null, "tags": []}, "third_line": {"name": "third_line", "description": "Customer Address details", "meta": {}, "data_type": null, "tags": []}, "fourth_line": {"name": "fourth_line", "description": "Customer Address details", "meta": {}, "data_type": null, "tags": []}, "fifth_line": {"name": "fifth_line", "description": "Customer Address details", "meta": {}, "data_type": null, "tags": []}, "postal_code": {"name": "postal_code", "description": "Customer Address details", "meta": {}, "data_type": null, "tags": []}, "country_code": {"name": "country_code", "description": "Customer Address details", "meta": {}, "data_type": null, "tags": []}, "created_by": {"name": "created_by", "description": "Created By for Audit", "meta": {}, "data_type": null, "tags": []}, "last_Modified_by": {"name": "last_Modified_by", "description": "Updated By for Audit", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "last_modified_timestamp": {"name": "last_modified_timestamp", "description": "Updation Date Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/customer/ccdata_customer_address.yml", "build_path": "target/compiled/ep_cco/ccdata/customer/ccdata_customer_address.sql", "compiled": true, "compiled_sql": "SELECT\n    ca.CustomerAddressId as customer_address_Id,\n    ca.CustomerId as customer_id,\n    ca.BrandId as brand_id,\n    ca.AddressType as address_type,\n    ad.HouseNumber as house_number,\n    ad.FirstLine as first_line,\n    ad.SecondLine as second_line,\n    ad.ThirdLine as third_line,\n    ad.FourthLine as fourth_line,\n    ad.FifthLine as fifth_line,\n    ad.PostalCode as postal_code,\n    ad.CountryCode as country_code,\n    ca.CreatedBy as created_by,\n    ca.LastModifiedBy as last_modified_by,\n    ca.CreatedTimestamp as created_timestamp,\n    ca.LastModifiedTimestamp as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_CustomerAddress` ca ,\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_Address` ad\nWHERE\n    ca.CustomerAddressId = ad.AddressId", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    ca.CustomerAddressId as customer_address_Id,\n    ca.CustomerId as customer_id,\n    ca.BrandId as brand_id,\n    ca.AddressType as address_type,\n    ad.HouseNumber as house_number,\n    ad.FirstLine as first_line,\n    ad.SecondLine as second_line,\n    ad.ThirdLine as third_line,\n    ad.FourthLine as fourth_line,\n    ad.FifthLine as fifth_line,\n    ad.PostalCode as postal_code,\n    ad.CountryCode as country_code,\n    ca.CreatedBy as created_by,\n    ca.LastModifiedBy as last_modified_by,\n    ca.CreatedTimestamp as created_timestamp,\n    ca.LastModifiedTimestamp as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_CustomerAddress` ca ,\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_Address` ad\nWHERE\n    ca.CustomerAddressId = ad.AddressId", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.017323970794677734, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.587637Z", "completed_at": "2020-04-20T13:29:19.603683Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.603969Z", "completed_at": "2020-04-20T13:29:19.603978Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    CustomerDetailId as customer_detail_id,\n    CustomerId as customer_id,\n    OrgId as org_id,\n    Title as title,\n    FirstName as first_name,\n    MiddleName as middle_name,\n    LastName as last_name,\n    Suffix as suffix,\n    DateOfBirth as date_of_birth,\n    Gender as gender,\n    '' as country_of_residence,  -- todo: gap in mapping spec , field not available in spanner , planned to be part of proto buf\n    '' as country_of_taxation,  -- todo: gap in mapping spec , field not available in spanner , planned to be part of proto buf\n    CreatedBy as created_by,\n    LastModifiedBy as last_modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as updated_timestamp\nFROM\n    {{ref('src_cust_CustomerDetail')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "customer", "ccdata_customer_detail"], "unique_id": "model.ep_cco.ccdata_customer_detail", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/customer/ccdata_customer_detail.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_detail.sql", "name": "ccdata_customer_detail", "resource_type": "model", "alias": "ccdata_customer_detail", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cust_CustomerDetail"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cust_CustomerDetail"]}, "description": "Customer Detail", "columns": {"customer_detail_id": {"name": "customer_detail_id", "description": "Unique Id to fetch Customer Details linked to Customer Id", "meta": {}, "data_type": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Unique Customer Id", "meta": {}, "data_type": null, "tags": []}, "org_id": {"name": "org_id", "description": "Unique Id to identify Organisation", "meta": {}, "data_type": null, "tags": []}, "title": {"name": "title", "description": "Customer's Title", "meta": {}, "data_type": null, "tags": []}, "first_name": {"name": "first_name", "description": "Customer's First Name", "meta": {}, "data_type": null, "tags": []}, "middle_name": {"name": "middle_name", "description": "Customer's Middle Name", "meta": {}, "data_type": null, "tags": []}, "last_name": {"name": "last_name", "description": "Customer's Last Name", "meta": {}, "data_type": null, "tags": []}, "suffix": {"name": "suffix", "description": "Customer's Suffix - The actual value will be in a reference data table hence INT64", "meta": {}, "data_type": null, "tags": []}, "date_of_birth": {"name": "date_of_birth", "description": "Customer's Date of birth", "meta": {}, "data_type": null, "tags": []}, "gender": {"name": "gender", "description": "Customer's Gender - The actual value will be in a reference data table hence INT64", "meta": {}, "data_type": null, "tags": []}, "created_by": {"name": "created_by", "description": "Created By for Audit", "meta": {}, "data_type": null, "tags": []}, "last_Modified_by": {"name": "last_Modified_by", "description": "Updated By for Audit", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "last_modified_timestamp": {"name": "last_modified_timestamp", "description": "Updation Date Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/customer/ccdata_customer_detail.yml", "build_path": "target/compiled/ep_cco/ccdata/customer/ccdata_customer_detail.sql", "compiled": true, "compiled_sql": "SELECT\n    CustomerDetailId as customer_detail_id,\n    CustomerId as customer_id,\n    OrgId as org_id,\n    Title as title,\n    FirstName as first_name,\n    MiddleName as middle_name,\n    LastName as last_name,\n    Suffix as suffix,\n    DateOfBirth as date_of_birth,\n    Gender as gender,\n    '' as country_of_residence,  -- todo: gap in mapping spec , field not available in spanner , planned to be part of proto buf\n    '' as country_of_taxation,  -- todo: gap in mapping spec , field not available in spanner , planned to be part of proto buf\n    CreatedBy as created_by,\n    LastModifiedBy as last_modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_CustomerDetail`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    CustomerDetailId as customer_detail_id,\n    CustomerId as customer_id,\n    OrgId as org_id,\n    Title as title,\n    FirstName as first_name,\n    MiddleName as middle_name,\n    LastName as last_name,\n    Suffix as suffix,\n    DateOfBirth as date_of_birth,\n    Gender as gender,\n    '' as country_of_residence,  -- todo: gap in mapping spec , field not available in spanner , planned to be part of proto buf\n    '' as country_of_taxation,  -- todo: gap in mapping spec , field not available in spanner , planned to be part of proto buf\n    CreatedBy as created_by,\n    LastModifiedBy as last_modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_CustomerDetail`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.015995025634765625, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.605412Z", "completed_at": "2020-04-20T13:29:19.620045Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.620364Z", "completed_at": "2020-04-20T13:29:19.620374Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    OrgId as org_id,\n    Name as name,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    {{ref('src_cust_Organisation')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "customer", "ccdata_customer_organisation"], "unique_id": "model.ep_cco.ccdata_customer_organisation", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/customer/ccdata_customer_organisation.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_organisation.sql", "name": "ccdata_customer_organisation", "resource_type": "model", "alias": "ccdata_customer_organisation", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cust_Organisation"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cust_Organisation"]}, "description": "Organisation", "columns": {"org_id": {"name": "org_id", "description": "Unique Id to identify Organisation.", "meta": {}, "data_type": null, "tags": []}, "name": {"name": "name", "description": "Organisation Name", "meta": {}, "data_type": null, "tags": []}, "created_by": {"name": "created_by", "description": "Created By for Audit", "meta": {}, "data_type": null, "tags": []}, "last_Modified_by": {"name": "last_Modified_by", "description": "Updated By for Audit", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "last_modified_timestamp": {"name": "last_modified_timestamp", "description": "Updation Date Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/customer/ccdata_customer_organisation.yml", "build_path": "target/compiled/ep_cco/ccdata/customer/ccdata_customer_organisation.sql", "compiled": true, "compiled_sql": "SELECT\n    OrgId as org_id,\n    Name as name,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_Organisation`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    OrgId as org_id,\n    Name as name,\n    CreatedBy as created_by,\n    LastModifiedBy as last_Modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_Organisation`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.011543750762939453, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.622169Z", "completed_at": "2020-04-20T13:29:19.632362Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.632643Z", "completed_at": "2020-04-20T13:29:19.632649Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    PortfolioItemId as portfolio_item_id,\n    CustomerId as customer_id,\n    BrandId as brand_Id,\n    ExternalSystemId as external_system_id,\n    AccountId as account_id,\n    AccountType as account_type,\n    Status as status,\n    CustomerRole as customer_role,\n    CreatedBy as created_by,\n    LastModifiedBy as last_modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    {{ref('src_cust_PortfolioItem')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "customer", "ccdata_customer_portfolio_item"], "unique_id": "model.ep_cco.ccdata_customer_portfolio_item", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/customer/ccdata_customer_portfolio_item.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.sql", "name": "ccdata_customer_portfolio_item", "resource_type": "model", "alias": "ccdata_customer_portfolio_item", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cust_PortfolioItem"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cust_PortfolioItem"]}, "description": "Customer", "columns": {"portfolio_item_id": {"name": "portfolio_item_id", "description": "Unique Id to identify portfolio item", "meta": {}, "data_type": null, "tags": []}, "customer_id": {"name": "customer_id", "description": "Unique Id to identify associated customer", "meta": {}, "data_type": null, "tags": []}, "brand_id": {"name": "brand_id", "description": "Unique Id to identify associated brand", "meta": {}, "data_type": null, "tags": []}, "external_system_id": {"name": "external_system_id", "description": "To identify external system including Vault, where product exists.", "meta": {}, "data_type": null, "tags": []}, "account_id": {"name": "account_id", "description": "Id for external system to locate the Savings Account, Credit Card Account etc", "meta": {}, "data_type": null, "tags": []}, "account_type": {"name": "account_type", "description": "Type of Account. e.g. Savings Account, Credit Card Account etc - not_null", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "Status of the account. e.g. Active, Inactive etc. - not_null", "meta": {}, "data_type": null, "tags": []}, "customer_role": {"name": "customer_role", "description": "Customer role - not_null", "meta": {}, "data_type": null, "tags": []}, "created_by": {"name": "created_by", "description": "Created By for Audit", "meta": {}, "data_type": null, "tags": []}, "last_Modified_by": {"name": "last_Modified_by", "description": "Updated By for Audit", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "last_modified_timestamp": {"name": "last_modified_timestamp", "description": "Updation Date Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "build_path": "target/compiled/ep_cco/ccdata/customer/ccdata_customer_portfolio_item.sql", "compiled": true, "compiled_sql": "SELECT\n    PortfolioItemId as portfolio_item_id,\n    CustomerId as customer_id,\n    BrandId as brand_Id,\n    ExternalSystemId as external_system_id,\n    AccountId as account_id,\n    AccountType as account_type,\n    Status as status,\n    CustomerRole as customer_role,\n    CreatedBy as created_by,\n    LastModifiedBy as last_modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_PortfolioItem`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    PortfolioItemId as portfolio_item_id,\n    CustomerId as customer_id,\n    BrandId as brand_Id,\n    ExternalSystemId as external_system_id,\n    AccountId as account_id,\n    AccountType as account_type,\n    Status as status,\n    CustomerRole as customer_role,\n    CreatedBy as created_by,\n    LastModifiedBy as last_modified_by,\n    CreatedTimestamp as created_timestamp,\n    LastModifiedTimestamp as last_modified_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cust_PortfolioItem`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.01416778564453125, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.633928Z", "completed_at": "2020-04-20T13:29:19.646909Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.647191Z", "completed_at": "2020-04-20T13:29:19.647200Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('ccdata_cbs_account_payment_servicer'), column_name='schema_name', values=['UK.OBIE.SortCodeExtAccountNumber', 'UK.OBIE.IBAN', 'UK.OBIE.PAN', 'UK.OBIE.BICFI']) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "accepted_values_ccdata_cbs_account_payment_servicer_schema_name__UK_OBIE_SortCodeExtAccountNumber__UK_OBIE_IBAN__UK_OBIE_PAN__UK_OBIE_BICFI"], "unique_id": "test.ep_cco.accepted_values_ccdata_cbs_account_payment_servicer_schema_name__UK_OBIE_SortCodeExtAccountNumber__UK_OBIE_IBAN__UK_OBIE_PAN__UK_OBIE_BICFI", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/accepted_values_ccdata_cbs_account_payment_servicer_882913e3cb753810766e5d0241cb277b.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_payment_servicer.yml", "name": "accepted_values_ccdata_cbs_account_payment_servicer_schema_name__UK_OBIE_SortCodeExtAccountNumber__UK_OBIE_IBAN__UK_OBIE_PAN__UK_OBIE_BICFI", "resource_type": "test", "alias": "accepted_values_ccdata_cbs_account_payment_servicer_schema_name__UK_OBIE_SortCodeExtAccountNumber__UK_OBIE_IBAN__UK_OBIE_PAN__UK_OBIE_BICFI", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_account_payment_servicer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.ep_cco.ccdata_cbs_account_payment_servicer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/accepted_values_ccdata_cbs_account_payment_servicer_882913e3cb753810766e5d0241cb277b.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        schema_name as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'UK.OBIE.SortCodeExtAccountNumber','UK.OBIE.IBAN','UK.OBIE.PAN','UK.OBIE.BICFI'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        schema_name as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'UK.OBIE.SortCodeExtAccountNumber','UK.OBIE.IBAN','UK.OBIE.PAN','UK.OBIE.BICFI'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        schema_name as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'UK.OBIE.SortCodeExtAccountNumber','UK.OBIE.IBAN','UK.OBIE.PAN','UK.OBIE.BICFI'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "column_name": "schema_name", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["UK.OBIE.SortCodeExtAccountNumber", "UK.OBIE.IBAN", "UK.OBIE.PAN", "UK.OBIE.BICFI"], "column_name": "schema_name"}}}, "error": null, "status": null, "execution_time": 0.018449068069458008, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.648712Z", "completed_at": "2020-04-20T13:29:19.665776Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.666087Z", "completed_at": "2020-04-20T13:29:19.666096Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_account_payment_servicer'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_account_payment_servicer_account_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_account_payment_servicer_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_account_payment_servicer_account_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_payment_servicer.yml", "name": "not_null_ccdata_cbs_account_payment_servicer_account_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_account_payment_servicer_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_account_payment_servicer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_account_payment_servicer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_account_payment_servicer_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere account_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere account_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere account_id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.009879112243652344, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.667385Z", "completed_at": "2020-04-20T13:29:19.676143Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.676485Z", "completed_at": "2020-04-20T13:29:19.676491Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_account_payment_servicer'), column_name='identification') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_account_payment_servicer_identification"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_account_payment_servicer_identification", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_account_payment_servicer_identification.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_payment_servicer.yml", "name": "not_null_ccdata_cbs_account_payment_servicer_identification", "resource_type": "test", "alias": "not_null_ccdata_cbs_account_payment_servicer_identification", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_account_payment_servicer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_account_payment_servicer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_account_payment_servicer_identification.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere identification is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere identification is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere identification is null\n\n", "column_name": "identification", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "identification"}}}, "error": null, "status": null, "execution_time": 0.012137889862060547, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.677754Z", "completed_at": "2020-04-20T13:29:19.688670Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.688965Z", "completed_at": "2020-04-20T13:29:19.688974Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_account_payment_servicer'), column_name='schema_name') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_account_payment_servicer_schema_name"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_account_payment_servicer_schema_name", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_account_payment_servicer_schema_name.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_payment_servicer.yml", "name": "not_null_ccdata_cbs_account_payment_servicer_schema_name", "resource_type": "test", "alias": "not_null_ccdata_cbs_account_payment_servicer_schema_name", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_account_payment_servicer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_account_payment_servicer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_account_payment_servicer_schema_name.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere schema_name is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere schema_name is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\nwhere schema_name is null\n\n", "column_name": "schema_name", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "schema_name"}}}, "error": null, "status": null, "execution_time": 0.010802030563354492, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.690328Z", "completed_at": "2020-04-20T13:29:19.699918Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.700252Z", "completed_at": "2020-04-20T13:29:19.700259Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_account_payment_servicer'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_account_payment_servicer_account_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_account_payment_servicer_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_account_payment_servicer_account_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_payment_servicer.yml", "name": "unique_ccdata_cbs_account_payment_servicer_account_id", "resource_type": "test", "alias": "unique_ccdata_cbs_account_payment_servicer_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_account_payment_servicer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_account_payment_servicer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_account_payment_servicer_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_payment_servicer`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.010901927947998047, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.701615Z", "completed_at": "2020-04-20T13:29:19.711310Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.711681Z", "completed_at": "2020-04-20T13:29:19.711691Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_account'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_account_account_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_account_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_account_account_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account.yml", "name": "not_null_ccdata_cbs_account_account_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_account_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_account_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\nwhere account_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\nwhere account_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\nwhere account_id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.010298967361450195, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.712995Z", "completed_at": "2020-04-20T13:29:19.722120Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.722433Z", "completed_at": "2020-04-20T13:29:19.722446Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_account'), column_name='product_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_account_product_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_account_product_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_account_product_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account.yml", "name": "not_null_ccdata_cbs_account_product_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_account_product_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_account_product_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\nwhere product_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\nwhere product_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\nwhere product_id is null\n\n", "column_name": "product_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "product_id"}}}, "error": null, "status": null, "execution_time": 0.012306928634643555, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.723755Z", "completed_at": "2020-04-20T13:29:19.734987Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.735272Z", "completed_at": "2020-04-20T13:29:19.735282Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_account'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_account_account_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_account_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_account_account_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account.yml", "name": "unique_ccdata_cbs_account_account_id", "resource_type": "test", "alias": "unique_ccdata_cbs_account_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_account_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.010345935821533203, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.736560Z", "completed_at": "2020-04-20T13:29:19.745720Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.746062Z", "completed_at": "2020-04-20T13:29:19.746071Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    AccountId as account_id,\n    AccountType as account_type,\n    Status as status,\n    BankId as bank_id,\n    StatusUpdatedTime as status_updated_time,\n    PermittedDemonitions as permitted_denominations,\n    Currency as currency,\n    Description as description,\n    true as is_internal,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    {{ref('src_ref_InternalAccount')}}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_internal_account"], "unique_id": "model.ep_cco.ccdata_cbs_internal_account", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_internal_account.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_internal_account.sql", "name": "ccdata_cbs_internal_account", "resource_type": "model", "alias": "ccdata_cbs_internal_account", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_ref_InternalAccount"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_ref_InternalAccount"]}, "description": "Internal Account data from Vault", "columns": {"account_id": {"name": "account_id", "description": "Primary key for account (Vault Account Id)", "meta": {}, "data_type": null, "tags": []}, "product_id": {"name": "product_id", "description": "Foreign key to product table (Unique product Id associated with an account)", "meta": {}, "data_type": null, "tags": []}, "product_version": {"name": "product_version", "description": "Product version of associated product", "meta": {}, "data_type": null, "tags": []}, "nick_name": {"name": "nick_name", "description": "Name of an internal account", "meta": {}, "data_type": null, "tags": []}, "account_type": {"name": "account_type", "description": "Type of Account - Personal Business", "meta": {}, "data_type": null, "tags": []}, "status": {"name": "status", "description": "Status of an Account", "meta": {}, "data_type": null, "tags": []}, "status_updated_time": {"name": "status_updated_time", "description": "Account status update timestamp", "meta": {}, "data_type": null, "tags": []}, "permitted_denominations": {"name": "permitted_denominations", "description": "Denominations the account can hold balances in.", "meta": {}, "data_type": null, "tags": []}, "currency": {"name": "currency", "description": "Denomination the account having balances in.", "meta": {}, "data_type": null, "tags": []}, "description": {"name": "description", "description": "Account Description", "meta": {}, "data_type": null, "tags": []}, "created_timestamp": {"name": "created_timestamp", "description": "Creation Date Timestamp", "meta": {}, "data_type": null, "tags": []}, "updated_timestamp": {"name": "updated_timestamp", "description": "Account Update Timestamp", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/ccdata/cbs/ccdata_cbs_internal_account.yml", "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_internal_account.sql", "compiled": true, "compiled_sql": "SELECT\n    AccountId as account_id,\n    AccountType as account_type,\n    Status as status,\n    BankId as bank_id,\n    StatusUpdatedTime as status_updated_time,\n    PermittedDemonitions as permitted_denominations,\n    Currency as currency,\n    Description as description,\n    true as is_internal,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_ref_InternalAccount`", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    AccountId as account_id,\n    AccountType as account_type,\n    Status as status,\n    BankId as bank_id,\n    StatusUpdatedTime as status_updated_time,\n    PermittedDemonitions as permitted_denominations,\n    Currency as currency,\n    Description as description,\n    true as is_internal,\n    CreatedAt as created_timestamp,\n    UpdatedAt as updated_timestamp\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_ref_InternalAccount`", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.014698982238769531, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.747463Z", "completed_at": "2020-04-20T13:29:19.760919Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.761226Z", "completed_at": "2020-04-20T13:29:19.761235Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n  STRUCT(\n    acc.account_id,\n    acc.product_id,\n    acc.product_version,\n    acc.primary_customer_id,\n    acc.stakeholder_ids,\n    acc.account_type,\n    acc.account_sub_type,\n    acc.status,\n    acc.status_updated_time,\n    acc.nick_name,\n    acc.permitted_denominations,\n    acc.currency,\n    acc.description,\n    acc.created_timestamp,\n    acc.updated_timestamp ) AS account,\n  STRUCT (\n    bal.account_id,\n--  bal.amount_id,  -- todo: confirmed by Sumukh: this is redundant field and can be deleted\n    bal.balance_id,\n    bal.postings_batch_id,\n    bal.updated_postings_batch_id,\n    bal.account_address,\n    bal.amount,\n    bal.currency,\n    bal.asset,\n    bal.charge_amount_indicator,\n    bal.created_timestamp,\n    bal.updated_timestamp,\n    null as value_date) AS balance  --todo: value_date not present under Balance entity in map spec: defaulting this to null for the time being\nFROM\n  {{ref('ccdata_cbs_account')}} acc\nLEFT JOIN\n  {{ref('ccdata_cbs_balance')}} bal\nON\n  acc.account_id = bal.account_id", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_account_denormalised"], "unique_id": "model.ep_cco.ccdata_cbs_account_denormalised", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_account_denormalised.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_denormalised.sql", "name": "ccdata_cbs_account_denormalised", "resource_type": "model", "alias": "ccdata_cbs_account_denormalised", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["ccdata_cbs_account"], ["ccdata_cbs_balance"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.ccdata_cbs_account", "model.ep_cco.ccdata_cbs_balance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_account_denormalised.sql", "compiled": true, "compiled_sql": "SELECT\n  STRUCT(\n    acc.account_id,\n    acc.product_id,\n    acc.product_version,\n    acc.primary_customer_id,\n    acc.stakeholder_ids,\n    acc.account_type,\n    acc.account_sub_type,\n    acc.status,\n    acc.status_updated_time,\n    acc.nick_name,\n    acc.permitted_denominations,\n    acc.currency,\n    acc.description,\n    acc.created_timestamp,\n    acc.updated_timestamp ) AS account,\n  STRUCT (\n    bal.account_id,\n--  bal.amount_id,  -- todo: confirmed by Sumukh: this is redundant field and can be deleted\n    bal.balance_id,\n    bal.postings_batch_id,\n    bal.updated_postings_batch_id,\n    bal.account_address,\n    bal.amount,\n    bal.currency,\n    bal.asset,\n    bal.charge_amount_indicator,\n    bal.created_timestamp,\n    bal.updated_timestamp,\n    null as value_date) AS balance  --todo: value_date not present under Balance entity in map spec: defaulting this to null for the time being\nFROM\n  `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account` acc\nLEFT JOIN\n  `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance` bal\nON\n  acc.account_id = bal.account_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n  STRUCT(\n    acc.account_id,\n    acc.product_id,\n    acc.product_version,\n    acc.primary_customer_id,\n    acc.stakeholder_ids,\n    acc.account_type,\n    acc.account_sub_type,\n    acc.status,\n    acc.status_updated_time,\n    acc.nick_name,\n    acc.permitted_denominations,\n    acc.currency,\n    acc.description,\n    acc.created_timestamp,\n    acc.updated_timestamp ) AS account,\n  STRUCT (\n    bal.account_id,\n--  bal.amount_id,  -- todo: confirmed by Sumukh: this is redundant field and can be deleted\n    bal.balance_id,\n    bal.postings_batch_id,\n    bal.updated_postings_batch_id,\n    bal.account_address,\n    bal.amount,\n    bal.currency,\n    bal.asset,\n    bal.charge_amount_indicator,\n    bal.created_timestamp,\n    bal.updated_timestamp,\n    null as value_date) AS balance  --todo: value_date not present under Balance entity in map spec: defaulting this to null for the time being\nFROM\n  `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account` acc\nLEFT JOIN\n  `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance` bal\nON\n  acc.account_id = bal.account_id", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.010139942169189453, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.762679Z", "completed_at": "2020-04-20T13:29:19.771443Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.771778Z", "completed_at": "2020-04-20T13:29:19.771787Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('ccdata_cbs_balance'), column_name='type', values=['ClosingAvailable', 'ClosingBooked', 'Expected', 'ForwardAvailable', 'Information', 'InterimAvailable', 'InterimBooked', 'OpeningAvailable', 'OpeningBooked', 'PreviouslyClosedBooked']) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "accepted_values_ccdata_cbs_balance_type__ClosingAvailable__ClosingBooked__Expected__ForwardAvailable__Information__InterimAvailable__InterimBooked__OpeningAvailable__OpeningBooked__PreviouslyClosedBooked"], "unique_id": "test.ep_cco.accepted_values_ccdata_cbs_balance_type__ClosingAvailable__ClosingBooked__Expected__ForwardAvailable__Information__InterimAvailable__InterimBooked__OpeningAvailable__OpeningBooked__PreviouslyClosedBooked", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/accepted_values_ccdata_cbs_balance_9460dd91f639147a1be217d176c79f43.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_balance.yml", "name": "accepted_values_ccdata_cbs_balance_type__ClosingAvailable__ClosingBooked__Expected__ForwardAvailable__Information__InterimAvailable__InterimBooked__OpeningAvailable__OpeningBooked__PreviouslyClosedBooked", "resource_type": "test", "alias": "accepted_values_ccdata_cbs_balance_type__ClosingAvailable__ClosingBooked__Expected__ForwardAvailable__Information__InterimAvailable__InterimBooked__OpeningAvailable__OpeningBooked__PreviouslyClosedBooked", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_balance"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.ep_cco.ccdata_cbs_balance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/accepted_values_ccdata_cbs_balance_9460dd91f639147a1be217d176c79f43.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        type as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'ClosingAvailable','ClosingBooked','Expected','ForwardAvailable','Information','InterimAvailable','InterimBooked','OpeningAvailable','OpeningBooked','PreviouslyClosedBooked'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        type as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'ClosingAvailable','ClosingBooked','Expected','ForwardAvailable','Information','InterimAvailable','InterimBooked','OpeningAvailable','OpeningBooked','PreviouslyClosedBooked'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        type as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'ClosingAvailable','ClosingBooked','Expected','ForwardAvailable','Information','InterimAvailable','InterimBooked','OpeningAvailable','OpeningBooked','PreviouslyClosedBooked'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "column_name": "type", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["ClosingAvailable", "ClosingBooked", "Expected", "ForwardAvailable", "Information", "InterimAvailable", "InterimBooked", "OpeningAvailable", "OpeningBooked", "PreviouslyClosedBooked"], "column_name": "type"}}}, "error": null, "status": null, "execution_time": 0.011639118194580078, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.773141Z", "completed_at": "2020-04-20T13:29:19.783658Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.783967Z", "completed_at": "2020-04-20T13:29:19.783976Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_balance'), column_name='asset') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_balance_asset"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_balance_asset", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_balance_asset.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_balance.yml", "name": "not_null_ccdata_cbs_balance_asset", "resource_type": "test", "alias": "not_null_ccdata_cbs_balance_asset", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_balance"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_balance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_balance_asset.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere asset is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere asset is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere asset is null\n\n", "column_name": "asset", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "asset"}}}, "error": null, "status": null, "execution_time": 0.011631250381469727, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.785273Z", "completed_at": "2020-04-20T13:29:19.795752Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.796076Z", "completed_at": "2020-04-20T13:29:19.796086Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_balance'), column_name='balance_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_balance_balance_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_balance_balance_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_balance_balance_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_balance.yml", "name": "not_null_ccdata_cbs_balance_balance_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_balance_balance_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_balance"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_balance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_balance_balance_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere balance_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere balance_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere balance_id is null\n\n", "column_name": "balance_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "balance_id"}}}, "error": null, "status": null, "execution_time": 0.010668039321899414, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.797410Z", "completed_at": "2020-04-20T13:29:19.807016Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.807295Z", "completed_at": "2020-04-20T13:29:19.807302Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_balance'), column_name='postings_batch_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_balance_postings_batch_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_balance_postings_batch_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_balance_postings_batch_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_balance.yml", "name": "not_null_ccdata_cbs_balance_postings_batch_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_balance_postings_batch_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_balance"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_balance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_balance_postings_batch_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere postings_batch_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere postings_batch_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere postings_batch_id is null\n\n", "column_name": "postings_batch_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "postings_batch_id"}}}, "error": null, "status": null, "execution_time": 0.010869026184082031, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.808497Z", "completed_at": "2020-04-20T13:29:19.818197Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.818553Z", "completed_at": "2020-04-20T13:29:19.818562Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_balance'), column_name='updated_postings_batch_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_balance_updated_postings_batch_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_balance_updated_postings_batch_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_balance_updated_postings_batch_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_balance.yml", "name": "not_null_ccdata_cbs_balance_updated_postings_batch_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_balance_updated_postings_batch_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_balance"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_balance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_balance_updated_postings_batch_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere updated_postings_batch_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere updated_postings_batch_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\nwhere updated_postings_batch_id is null\n\n", "column_name": "updated_postings_batch_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "updated_postings_batch_id"}}}, "error": null, "status": null, "execution_time": 0.010970830917358398, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.819856Z", "completed_at": "2020-04-20T13:29:19.829759Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.830065Z", "completed_at": "2020-04-20T13:29:19.830072Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_relationships(model=ref('ccdata_cbs_balance'), column_name='account_id', field='account_id', to=ref('ccdata_cbs_account')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_cbs_balance_account_id__account_id__ref_ccdata_cbs_account_"], "unique_id": "test.ep_cco.relationships_ccdata_cbs_balance_account_id__account_id__ref_ccdata_cbs_account_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_cbs_balance_d9b2c648582d7bde0ffa5b001e8b9c40.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_balance.yml", "name": "relationships_ccdata_cbs_balance_account_id__account_id__ref_ccdata_cbs_account_", "resource_type": "test", "alias": "relationships_ccdata_cbs_balance_account_id__account_id__ref_ccdata_cbs_account_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_balance"], ["ccdata_cbs_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_cbs_balance", "model.ep_cco.ccdata_cbs_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_cbs_balance_d9b2c648582d7bde0ffa5b001e8b9c40.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_cbs_account')", "field": "account_id", "column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.012090921401977539, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.831270Z", "completed_at": "2020-04-20T13:29:19.842264Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.842565Z", "completed_at": "2020-04-20T13:29:19.842573Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_balance'), column_name='balance_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_balance_balance_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_balance_balance_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_balance_balance_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_balance.yml", "name": "unique_ccdata_cbs_balance_balance_id", "resource_type": "test", "alias": "unique_ccdata_cbs_balance_balance_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_balance"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_balance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_balance_balance_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        balance_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n    where balance_id is not null\n    group by balance_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        balance_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n    where balance_id is not null\n    group by balance_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        balance_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_balance`\n    where balance_id is not null\n    group by balance_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "balance_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "balance_id"}}}, "error": null, "status": null, "execution_time": 0.011162281036376953, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.843845Z", "completed_at": "2020-04-20T13:29:19.853837Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.854160Z", "completed_at": "2020-04-20T13:29:19.854169Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('ccdata_cbs_postings_instructions'), column_name='phase', values=['POSTING_PHASE_UNKNOWN', 'POSTING_PHASE_PENDING_INCOMING', 'POSTING_PHASE_PENDING_OUTGOING', 'POSTING_PHASE_COMMITTED', 'POSTING_PHASE_UNKNOWN']) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "accepted_values_ccdata_cbs_postings_instructions_phase__POSTING_PHASE_UNKNOWN__POSTING_PHASE_PENDING_INCOMING__POSTING_PHASE_PENDING_OUTGOING__POSTING_PHASE_COMMITTED__POSTING_PHASE_UNKNOWN"], "unique_id": "test.ep_cco.accepted_values_ccdata_cbs_postings_instructions_phase__POSTING_PHASE_UNKNOWN__POSTING_PHASE_PENDING_INCOMING__POSTING_PHASE_PENDING_OUTGOING__POSTING_PHASE_COMMITTED__POSTING_PHASE_UNKNOWN", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/accepted_values_ccdata_cbs_postings_instructions_eb6bb01bf4647aa8553383097cceb7ec.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "accepted_values_ccdata_cbs_postings_instructions_phase__POSTING_PHASE_UNKNOWN__POSTING_PHASE_PENDING_INCOMING__POSTING_PHASE_PENDING_OUTGOING__POSTING_PHASE_COMMITTED__POSTING_PHASE_UNKNOWN", "resource_type": "test", "alias": "accepted_values_ccdata_cbs_postings_instructions_phase__POSTING_PHASE_UNKNOWN__POSTING_PHASE_PENDING_INCOMING__POSTING_PHASE_PENDING_OUTGOING__POSTING_PHASE_COMMITTED__POSTING_PHASE_UNKNOWN", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/accepted_values_ccdata_cbs_postings_instructions_eb6bb01bf4647aa8553383097cceb7ec.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        phase as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'POSTING_PHASE_UNKNOWN','POSTING_PHASE_PENDING_INCOMING','POSTING_PHASE_PENDING_OUTGOING','POSTING_PHASE_COMMITTED','POSTING_PHASE_UNKNOWN'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        phase as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'POSTING_PHASE_UNKNOWN','POSTING_PHASE_PENDING_INCOMING','POSTING_PHASE_PENDING_OUTGOING','POSTING_PHASE_COMMITTED','POSTING_PHASE_UNKNOWN'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        phase as value_field\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'POSTING_PHASE_UNKNOWN','POSTING_PHASE_PENDING_INCOMING','POSTING_PHASE_PENDING_OUTGOING','POSTING_PHASE_COMMITTED','POSTING_PHASE_UNKNOWN'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "column_name": "phase", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["POSTING_PHASE_UNKNOWN", "POSTING_PHASE_PENDING_INCOMING", "POSTING_PHASE_PENDING_OUTGOING", "POSTING_PHASE_COMMITTED", "POSTING_PHASE_UNKNOWN"], "column_name": "phase"}}}, "error": null, "status": null, "execution_time": 0.011005878448486328, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.855413Z", "completed_at": "2020-04-20T13:29:19.865294Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.865616Z", "completed_at": "2020-04-20T13:29:19.865626Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_postings_instructions'), column_name='phase') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_postings_instructions_phase"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_postings_instructions_phase", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_postings_instructions_phase.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "not_null_ccdata_cbs_postings_instructions_phase", "resource_type": "test", "alias": "not_null_ccdata_cbs_postings_instructions_phase", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_postings_instructions_phase.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere phase is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere phase is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere phase is null\n\n", "column_name": "phase", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "phase"}}}, "error": null, "status": null, "execution_time": 0.012468099594116211, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.866917Z", "completed_at": "2020-04-20T13:29:19.878327Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.878614Z", "completed_at": "2020-04-20T13:29:19.878622Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_postings_instructions'), column_name='postings_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_postings_instructions_postings_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_postings_instructions_postings_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_postings_instructions_postings_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "not_null_ccdata_cbs_postings_instructions_postings_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_postings_instructions_postings_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_postings_instructions_postings_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere postings_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere postings_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere postings_id is null\n\n", "column_name": "postings_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "postings_id"}}}, "error": null, "status": null, "execution_time": 0.010549068450927734, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.879831Z", "completed_at": "2020-04-20T13:29:19.889245Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.889568Z", "completed_at": "2020-04-20T13:29:19.889576Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_postings_instructions'), column_name='postings_instruction_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_postings_instructions_postings_instruction_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_postings_instructions_postings_instruction_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_postings_instructions_postings_instruction_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "not_null_ccdata_cbs_postings_instructions_postings_instruction_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_postings_instructions_postings_instruction_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_postings_instructions_postings_instruction_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere postings_instruction_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere postings_instruction_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\nwhere postings_instruction_id is null\n\n", "column_name": "postings_instruction_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "postings_instruction_id"}}}, "error": null, "status": null, "execution_time": 0.01143789291381836, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.890902Z", "completed_at": "2020-04-20T13:29:19.901228Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.901520Z", "completed_at": "2020-04-20T13:29:19.901529Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_cbs_postings_instructions'), column_name='account_id', field='account_id', to=ref('ccdata_cbs_account')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_cbs_postings_instructions_account_id__account_id__ref_ccdata_cbs_account_"], "unique_id": "test.ep_cco.relationships_ccdata_cbs_postings_instructions_account_id__account_id__ref_ccdata_cbs_account_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_cbs_postings_instructions_d9b2c648582d7bde0ffa5b001e8b9c40.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "relationships_ccdata_cbs_postings_instructions_account_id__account_id__ref_ccdata_cbs_account_", "resource_type": "test", "alias": "relationships_ccdata_cbs_postings_instructions_account_id__account_id__ref_ccdata_cbs_account_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"], ["ccdata_cbs_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions", "model.ep_cco.ccdata_cbs_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_cbs_postings_instructions_d9b2c648582d7bde0ffa5b001e8b9c40.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_cbs_account')", "field": "account_id", "column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.011647939682006836, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.902665Z", "completed_at": "2020-04-20T13:29:19.913187Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.913514Z", "completed_at": "2020-04-20T13:29:19.913524Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_postings_instructions'), column_name='postings_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_postings_instructions_postings_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_postings_instructions_postings_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_postings_instructions_postings_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "unique_ccdata_cbs_postings_instructions_postings_id", "resource_type": "test", "alias": "unique_ccdata_cbs_postings_instructions_postings_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_postings_instructions_postings_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n    where postings_id is not null\n    group by postings_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n    where postings_id is not null\n    group by postings_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n    where postings_id is not null\n    group by postings_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "postings_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "postings_id"}}}, "error": null, "status": null, "execution_time": 0.010818004608154297, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.914800Z", "completed_at": "2020-04-20T13:29:19.924530Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.924846Z", "completed_at": "2020-04-20T13:29:19.924853Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_postings_instructions'), column_name='postings_instruction_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_postings_instructions_postings_instruction_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_postings_instructions_postings_instruction_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_postings_instructions_postings_instruction_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "unique_ccdata_cbs_postings_instructions_postings_instruction_id", "resource_type": "test", "alias": "unique_ccdata_cbs_postings_instructions_postings_instruction_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_postings_instructions_postings_instruction_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_instruction_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n    where postings_instruction_id is not null\n    group by postings_instruction_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_instruction_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n    where postings_instruction_id is not null\n    group by postings_instruction_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_instruction_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n    where postings_instruction_id is not null\n    group by postings_instruction_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "postings_instruction_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "postings_instruction_id"}}}, "error": null, "status": null, "execution_time": 0.010962963104248047, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.926048Z", "completed_at": "2020-04-20T13:29:19.935803Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.936199Z", "completed_at": "2020-04-20T13:29:19.936208Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_transaction'), column_name='transaction_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_transaction_transaction_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_transaction_transaction_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_transaction_transaction_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_transaction.yml", "name": "not_null_ccdata_cbs_transaction_transaction_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_transaction_transaction_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_transaction"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_transaction"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_transaction_transaction_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\nwhere transaction_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\nwhere transaction_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\nwhere transaction_id is null\n\n", "column_name": "transaction_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "transaction_id"}}}, "error": null, "status": null, "execution_time": 0.011098146438598633, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.937542Z", "completed_at": "2020-04-20T13:29:19.947557Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.947846Z", "completed_at": "2020-04-20T13:29:19.947855Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_cbs_postings_instructions'), column_name='transaction_id', field='transaction_id', to=ref('ccdata_cbs_transaction')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_cbs_postings_instructions_transaction_id__transaction_id__ref_ccdata_cbs_transaction_"], "unique_id": "test.ep_cco.relationships_ccdata_cbs_postings_instructions_transaction_id__transaction_id__ref_ccdata_cbs_transaction_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_cbs_postings_instructions_62e01cf11db682a24bf6be75e094649b.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "relationships_ccdata_cbs_postings_instructions_transaction_id__transaction_id__ref_ccdata_cbs_transaction_", "resource_type": "test", "alias": "relationships_ccdata_cbs_postings_instructions_transaction_id__transaction_id__ref_ccdata_cbs_transaction_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"], ["ccdata_cbs_transaction"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions", "model.ep_cco.ccdata_cbs_transaction"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_cbs_postings_instructions_62e01cf11db682a24bf6be75e094649b.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "transaction_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_cbs_transaction')", "field": "transaction_id", "column_name": "transaction_id"}}}, "error": null, "status": null, "execution_time": 0.012552976608276367, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.949079Z", "completed_at": "2020-04-20T13:29:19.960274Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.960671Z", "completed_at": "2020-04-20T13:29:19.960681Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_cbs_transaction'), column_name='account_id', field='account_id', to=ref('ccdata_cbs_account')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_cbs_transaction_account_id__account_id__ref_ccdata_cbs_account_"], "unique_id": "test.ep_cco.relationships_ccdata_cbs_transaction_account_id__account_id__ref_ccdata_cbs_account_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_cbs_transaction_d9b2c648582d7bde0ffa5b001e8b9c40.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_transaction.yml", "name": "relationships_ccdata_cbs_transaction_account_id__account_id__ref_ccdata_cbs_account_", "resource_type": "test", "alias": "relationships_ccdata_cbs_transaction_account_id__account_id__ref_ccdata_cbs_account_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_transaction"], ["ccdata_cbs_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_cbs_transaction", "model.ep_cco.ccdata_cbs_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_cbs_transaction_d9b2c648582d7bde0ffa5b001e8b9c40.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_cbs_account')", "field": "account_id", "column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.012376070022583008, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.962130Z", "completed_at": "2020-04-20T13:29:19.973448Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.973720Z", "completed_at": "2020-04-20T13:29:19.973727Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_transaction'), column_name='transaction_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_transaction_transaction_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_transaction_transaction_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_transaction_transaction_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_transaction.yml", "name": "unique_ccdata_cbs_transaction_transaction_id", "resource_type": "test", "alias": "unique_ccdata_cbs_transaction_transaction_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_transaction"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_transaction"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_transaction_transaction_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        transaction_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n    where transaction_id is not null\n    group by transaction_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        transaction_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n    where transaction_id is not null\n    group by transaction_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        transaction_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n    where transaction_id is not null\n    group by transaction_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "transaction_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "transaction_id"}}}, "error": null, "status": null, "execution_time": 0.010931968688964844, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.974895Z", "completed_at": "2020-04-20T13:29:19.984617Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.985019Z", "completed_at": "2020-04-20T13:29:19.985028Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_account_attr_key_val'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_account_attr_key_val_account_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_account_attr_key_val_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_account_attr_key_val_account_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_attr_key_val.yml", "name": "not_null_ccdata_cbs_account_attr_key_val_account_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_account_attr_key_val_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_account_attr_key_val"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_account_attr_key_val"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_account_attr_key_val_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_attr_key_val`\nwhere account_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_attr_key_val`\nwhere account_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_attr_key_val`\nwhere account_id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.010940074920654297, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.986358Z", "completed_at": "2020-04-20T13:29:19.996218Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:19.996503Z", "completed_at": "2020-04-20T13:29:19.996511Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_account_attr_key_val'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_account_attr_key_val_account_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_account_attr_key_val_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_account_attr_key_val_account_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_account_attr_key_val.yml", "name": "unique_ccdata_cbs_account_attr_key_val_account_id", "resource_type": "test", "alias": "unique_ccdata_cbs_account_attr_key_val_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_account_attr_key_val"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_account_attr_key_val"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_account_attr_key_val_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_attr_key_val`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_attr_key_val`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account_attr_key_val`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.010799884796142578, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:19.997740Z", "completed_at": "2020-04-20T13:29:20.007345Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.007694Z", "completed_at": "2020-04-20T13:29:20.007703Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_postings_batch'), column_name='postings_batch_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_postings_batch_postings_batch_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_postings_batch_postings_batch_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_postings_batch_postings_batch_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_batch.yml", "name": "not_null_ccdata_cbs_postings_batch_postings_batch_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_postings_batch_postings_batch_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_batch"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_postings_batch"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_postings_batch_postings_batch_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\nwhere postings_batch_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\nwhere postings_batch_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\nwhere postings_batch_id is null\n\n", "column_name": "postings_batch_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "postings_batch_id"}}}, "error": null, "status": null, "execution_time": 0.012397289276123047, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.009029Z", "completed_at": "2020-04-20T13:29:20.020351Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.020633Z", "completed_at": "2020-04-20T13:29:20.020641Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_postings_batch'), column_name='transaction_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_postings_batch_transaction_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_postings_batch_transaction_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_postings_batch_transaction_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_batch.yml", "name": "not_null_ccdata_cbs_postings_batch_transaction_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_postings_batch_transaction_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_batch"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_postings_batch"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_postings_batch_transaction_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\nwhere transaction_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\nwhere transaction_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\nwhere transaction_id is null\n\n", "column_name": "transaction_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "transaction_id"}}}, "error": null, "status": null, "execution_time": 0.011710882186889648, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.021838Z", "completed_at": "2020-04-20T13:29:20.032415Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.032756Z", "completed_at": "2020-04-20T13:29:20.032766Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_cbs_postings_batch'), column_name='transaction_id', field='transaction_id', to=ref('ccdata_cbs_transaction')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_cbs_postings_batch_transaction_id__transaction_id__ref_ccdata_cbs_transaction_"], "unique_id": "test.ep_cco.relationships_ccdata_cbs_postings_batch_transaction_id__transaction_id__ref_ccdata_cbs_transaction_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_cbs_postings_batch_62e01cf11db682a24bf6be75e094649b.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_batch.yml", "name": "relationships_ccdata_cbs_postings_batch_transaction_id__transaction_id__ref_ccdata_cbs_transaction_", "resource_type": "test", "alias": "relationships_ccdata_cbs_postings_batch_transaction_id__transaction_id__ref_ccdata_cbs_transaction_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_batch"], ["ccdata_cbs_transaction"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_cbs_postings_batch", "model.ep_cco.ccdata_cbs_transaction"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_cbs_postings_batch_62e01cf11db682a24bf6be75e094649b.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n) as child\nleft join (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n) as child\nleft join (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n) as child\nleft join (\n    select transaction_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_transaction`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "transaction_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_cbs_transaction')", "field": "transaction_id", "column_name": "transaction_id"}}}, "error": null, "status": null, "execution_time": 0.012237071990966797, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.034024Z", "completed_at": "2020-04-20T13:29:20.045165Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.045477Z", "completed_at": "2020-04-20T13:29:20.045484Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_cbs_postings_instructions'), column_name='postings_batch_id', field='journal_entry_line_id', to=ref('ccdata_cbs_postings_batch')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_cbs_postings_instructions_postings_batch_id__journal_entry_line_id__ref_ccdata_cbs_postings_batch_"], "unique_id": "test.ep_cco.relationships_ccdata_cbs_postings_instructions_postings_batch_id__journal_entry_line_id__ref_ccdata_cbs_postings_batch_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_cbs_postings_instructions_9ba5b045a35f3bd8bfb1244ce0ab8d43.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_instructions.yml", "name": "relationships_ccdata_cbs_postings_instructions_postings_batch_id__journal_entry_line_id__ref_ccdata_cbs_postings_batch_", "resource_type": "test", "alias": "relationships_ccdata_cbs_postings_instructions_postings_batch_id__journal_entry_line_id__ref_ccdata_cbs_postings_batch_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_instructions"], ["ccdata_cbs_postings_batch"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_cbs_postings_instructions", "model.ep_cco.ccdata_cbs_postings_batch"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_cbs_postings_instructions_9ba5b045a35f3bd8bfb1244ce0ab8d43.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select postings_batch_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select journal_entry_line_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select postings_batch_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select journal_entry_line_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select postings_batch_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_instructions`\n) as child\nleft join (\n    select journal_entry_line_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "postings_batch_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_cbs_postings_batch')", "field": "journal_entry_line_id", "column_name": "postings_batch_id"}}}, "error": null, "status": null, "execution_time": 0.012410879135131836, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.046682Z", "completed_at": "2020-04-20T13:29:20.057960Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.058276Z", "completed_at": "2020-04-20T13:29:20.058287Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_postings_batch'), column_name='postings_batch_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_postings_batch_postings_batch_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_postings_batch_postings_batch_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_postings_batch_postings_batch_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_postings_batch.yml", "name": "unique_ccdata_cbs_postings_batch_postings_batch_id", "resource_type": "test", "alias": "unique_ccdata_cbs_postings_batch_postings_batch_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_postings_batch"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_postings_batch"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_postings_batch_postings_batch_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_batch_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n    where postings_batch_id is not null\n    group by postings_batch_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_batch_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n    where postings_batch_id is not null\n    group by postings_batch_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        postings_batch_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_postings_batch`\n    where postings_batch_id is not null\n    group by postings_batch_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "postings_batch_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "postings_batch_id"}}}, "error": null, "status": null, "execution_time": 0.010872125625610352, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.059586Z", "completed_at": "2020-04-20T13:29:20.069306Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.069652Z", "completed_at": "2020-04-20T13:29:20.069659Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_brand'), column_name='brand_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_brand_brand_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_brand_brand_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_brand_brand_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_brand.yml", "name": "not_null_ccdata_customer_brand_brand_id", "resource_type": "test", "alias": "not_null_ccdata_customer_brand_brand_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_brand"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_brand"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_brand_brand_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\nwhere brand_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\nwhere brand_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\nwhere brand_id is null\n\n", "column_name": "brand_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "brand_id"}}}, "error": null, "status": null, "execution_time": 0.010985851287841797, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.070861Z", "completed_at": "2020-04-20T13:29:20.080693Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.081039Z", "completed_at": "2020-04-20T13:29:20.081049Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_customer_brand'), column_name='brand_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_customer_brand_brand_id"], "unique_id": "test.ep_cco.unique_ccdata_customer_brand_brand_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_customer_brand_brand_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_brand.yml", "name": "unique_ccdata_customer_brand_brand_id", "resource_type": "test", "alias": "unique_ccdata_customer_brand_brand_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_customer_brand"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_customer_brand"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_customer_brand_brand_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        brand_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\n    where brand_id is not null\n    group by brand_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        brand_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\n    where brand_id is not null\n    group by brand_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        brand_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\n    where brand_id is not null\n    group by brand_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "brand_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "brand_id"}}}, "error": null, "status": null, "execution_time": 0.012654781341552734, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.082359Z", "completed_at": "2020-04-20T13:29:20.093650Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.094152Z", "completed_at": "2020-04-20T13:29:20.094162Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer'), column_name='customer_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_customer_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_customer_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_customer_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer.yml", "name": "not_null_ccdata_customer_customer_id", "resource_type": "test", "alias": "not_null_ccdata_customer_customer_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\nwhere customer_id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.010893821716308594, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.095486Z", "completed_at": "2020-04-20T13:29:20.105240Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.105552Z", "completed_at": "2020-04-20T13:29:20.105563Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_customer'), column_name='customer_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_customer_customer_id"], "unique_id": "test.ep_cco.unique_ccdata_customer_customer_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_customer_customer_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer.yml", "name": "unique_ccdata_customer_customer_id", "resource_type": "test", "alias": "unique_ccdata_customer_customer_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_customer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_customer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_customer_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.011123895645141602, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.106821Z", "completed_at": "2020-04-20T13:29:20.116894Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.117196Z", "completed_at": "2020-04-20T13:29:20.117205Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_address'), column_name='brand_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_address_brand_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_address_brand_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_address_brand_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_address.yml", "name": "not_null_ccdata_customer_address_brand_id", "resource_type": "test", "alias": "not_null_ccdata_customer_address_brand_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_address"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_address"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_address_brand_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere brand_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere brand_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere brand_id is null\n\n", "column_name": "brand_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "brand_id"}}}, "error": null, "status": null, "execution_time": 0.011140108108520508, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.118426Z", "completed_at": "2020-04-20T13:29:20.128385Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.128743Z", "completed_at": "2020-04-20T13:29:20.128754Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_address'), column_name='customer_address_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_address_customer_address_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_address_customer_address_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_address_customer_address_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_address.yml", "name": "not_null_ccdata_customer_address_customer_address_id", "resource_type": "test", "alias": "not_null_ccdata_customer_address_customer_address_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_address"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_address"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_address_customer_address_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere customer_address_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere customer_address_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere customer_address_id is null\n\n", "column_name": "customer_address_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_address_id"}}}, "error": null, "status": null, "execution_time": 0.011378765106201172, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.130059Z", "completed_at": "2020-04-20T13:29:20.140358Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.140654Z", "completed_at": "2020-04-20T13:29:20.140662Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_address'), column_name='customer_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_address_customer_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_address_customer_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_address_customer_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_address.yml", "name": "not_null_ccdata_customer_address_customer_id", "resource_type": "test", "alias": "not_null_ccdata_customer_address_customer_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_address"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_address"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_address_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\nwhere customer_id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.011429071426391602, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.141872Z", "completed_at": "2020-04-20T13:29:20.152146Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.152477Z", "completed_at": "2020-04-20T13:29:20.152497Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_customer_address'), column_name='customer_id', field='customer_id', to=ref('ccdata_customer')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_customer_address_customer_id__customer_id__ref_ccdata_customer_"], "unique_id": "test.ep_cco.relationships_ccdata_customer_address_customer_id__customer_id__ref_ccdata_customer_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_customer_address_ecd872c3f4dded515b58187193a8d1b7.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_address.yml", "name": "relationships_ccdata_customer_address_customer_id__customer_id__ref_ccdata_customer_", "resource_type": "test", "alias": "relationships_ccdata_customer_address_customer_id__customer_id__ref_ccdata_customer_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_address"], ["ccdata_customer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_customer_address", "model.ep_cco.ccdata_customer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_customer_address_ecd872c3f4dded515b58187193a8d1b7.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_customer')", "field": "customer_id", "column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.01405477523803711, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.153883Z", "completed_at": "2020-04-20T13:29:20.166781Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.167059Z", "completed_at": "2020-04-20T13:29:20.167067Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_customer_address'), column_name='customer_address_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_customer_address_customer_address_id"], "unique_id": "test.ep_cco.unique_ccdata_customer_address_customer_address_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_customer_address_customer_address_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_address.yml", "name": "unique_ccdata_customer_address_customer_address_id", "resource_type": "test", "alias": "unique_ccdata_customer_address_customer_address_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_customer_address"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_customer_address"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_customer_address_customer_address_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_address_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\n    where customer_address_id is not null\n    group by customer_address_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_address_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\n    where customer_address_id is not null\n    group by customer_address_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_address_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_address`\n    where customer_address_id is not null\n    group by customer_address_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_address_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_address_id"}}}, "error": null, "status": null, "execution_time": 0.01192617416381836, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.168310Z", "completed_at": "2020-04-20T13:29:20.178344Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.178974Z", "completed_at": "2020-04-20T13:29:20.178990Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_detail'), column_name='customer_detail_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_detail_customer_detail_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_detail_customer_detail_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_detail_customer_detail_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_detail.yml", "name": "not_null_ccdata_customer_detail_customer_detail_id", "resource_type": "test", "alias": "not_null_ccdata_customer_detail_customer_detail_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_detail"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_detail"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_detail_customer_detail_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\nwhere customer_detail_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\nwhere customer_detail_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\nwhere customer_detail_id is null\n\n", "column_name": "customer_detail_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_detail_id"}}}, "error": null, "status": null, "execution_time": 0.011027097702026367, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.180838Z", "completed_at": "2020-04-20T13:29:20.190816Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.191101Z", "completed_at": "2020-04-20T13:29:20.191109Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_detail'), column_name='customer_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_detail_customer_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_detail_customer_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_detail_customer_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_detail.yml", "name": "not_null_ccdata_customer_detail_customer_id", "resource_type": "test", "alias": "not_null_ccdata_customer_detail_customer_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_detail"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_detail"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_detail_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\nwhere customer_id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.010795831680297852, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.192300Z", "completed_at": "2020-04-20T13:29:20.201959Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.202280Z", "completed_at": "2020-04-20T13:29:20.202289Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_customer_detail'), column_name='customer_id', field='customer_id', to=ref('ccdata_customer')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_customer_detail_customer_id__customer_id__ref_ccdata_customer_"], "unique_id": "test.ep_cco.relationships_ccdata_customer_detail_customer_id__customer_id__ref_ccdata_customer_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_customer_detail_ecd872c3f4dded515b58187193a8d1b7.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_detail.yml", "name": "relationships_ccdata_customer_detail_customer_id__customer_id__ref_ccdata_customer_", "resource_type": "test", "alias": "relationships_ccdata_customer_detail_customer_id__customer_id__ref_ccdata_customer_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_detail"], ["ccdata_customer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_customer_detail", "model.ep_cco.ccdata_customer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_customer_detail_ecd872c3f4dded515b58187193a8d1b7.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_customer')", "field": "customer_id", "column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.012485265731811523, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.203604Z", "completed_at": "2020-04-20T13:29:20.215018Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.215299Z", "completed_at": "2020-04-20T13:29:20.215307Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_customer_detail'), column_name='customer_detail_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_customer_detail_customer_detail_id"], "unique_id": "test.ep_cco.unique_ccdata_customer_detail_customer_detail_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_customer_detail_customer_detail_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_detail.yml", "name": "unique_ccdata_customer_detail_customer_detail_id", "resource_type": "test", "alias": "unique_ccdata_customer_detail_customer_detail_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_customer_detail"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_customer_detail"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_customer_detail_customer_detail_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_detail_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\n    where customer_detail_id is not null\n    group by customer_detail_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_detail_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\n    where customer_detail_id is not null\n    group by customer_detail_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_detail_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_detail`\n    where customer_detail_id is not null\n    group by customer_detail_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "customer_detail_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_detail_id"}}}, "error": null, "status": null, "execution_time": 0.010601043701171875, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.216510Z", "completed_at": "2020-04-20T13:29:20.225990Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.226288Z", "completed_at": "2020-04-20T13:29:20.226297Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_organisation'), column_name='org_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_organisation_org_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_organisation_org_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_organisation_org_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_organisation.yml", "name": "not_null_ccdata_customer_organisation_org_id", "resource_type": "test", "alias": "not_null_ccdata_customer_organisation_org_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_organisation"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_organisation"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_organisation_org_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_organisation`\nwhere org_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_organisation`\nwhere org_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_organisation`\nwhere org_id is null\n\n", "column_name": "org_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "org_id"}}}, "error": null, "status": null, "execution_time": 0.010994195938110352, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.227740Z", "completed_at": "2020-04-20T13:29:20.237593Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.237868Z", "completed_at": "2020-04-20T13:29:20.237877Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_customer_organisation'), column_name='org_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_customer_organisation_org_id"], "unique_id": "test.ep_cco.unique_ccdata_customer_organisation_org_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_customer_organisation_org_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_organisation.yml", "name": "unique_ccdata_customer_organisation_org_id", "resource_type": "test", "alias": "unique_ccdata_customer_organisation_org_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_customer_organisation"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_customer_organisation"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_customer_organisation_org_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        org_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_organisation`\n    where org_id is not null\n    group by org_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        org_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_organisation`\n    where org_id is not null\n    group by org_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        org_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_organisation`\n    where org_id is not null\n    group by org_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "org_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "org_id"}}}, "error": null, "status": null, "execution_time": 0.010360956192016602, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.239017Z", "completed_at": "2020-04-20T13:29:20.248228Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.248583Z", "completed_at": "2020-04-20T13:29:20.248593Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_portfolio_item'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_portfolio_item_account_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_portfolio_item_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_portfolio_item_account_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "name": "not_null_ccdata_customer_portfolio_item_account_id", "resource_type": "test", "alias": "not_null_ccdata_customer_portfolio_item_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_portfolio_item"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_portfolio_item"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_portfolio_item_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere account_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere account_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere account_id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.010802984237670898, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.249883Z", "completed_at": "2020-04-20T13:29:20.259619Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.259893Z", "completed_at": "2020-04-20T13:29:20.259901Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_portfolio_item'), column_name='brand_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_portfolio_item_brand_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_portfolio_item_brand_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_portfolio_item_brand_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "name": "not_null_ccdata_customer_portfolio_item_brand_id", "resource_type": "test", "alias": "not_null_ccdata_customer_portfolio_item_brand_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_portfolio_item"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_portfolio_item"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_portfolio_item_brand_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere brand_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere brand_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere brand_id is null\n\n", "column_name": "brand_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "brand_id"}}}, "error": null, "status": null, "execution_time": 0.01151895523071289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.261094Z", "completed_at": "2020-04-20T13:29:20.271422Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.271759Z", "completed_at": "2020-04-20T13:29:20.271769Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_portfolio_item'), column_name='customer_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_portfolio_item_customer_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_portfolio_item_customer_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_portfolio_item_customer_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "name": "not_null_ccdata_customer_portfolio_item_customer_id", "resource_type": "test", "alias": "not_null_ccdata_customer_portfolio_item_customer_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_portfolio_item"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_portfolio_item"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_portfolio_item_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere customer_id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.011098146438598633, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.272991Z", "completed_at": "2020-04-20T13:29:20.283043Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.283327Z", "completed_at": "2020-04-20T13:29:20.283334Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_customer_portfolio_item'), column_name='portfolio_item_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_customer_portfolio_item_portfolio_item_id"], "unique_id": "test.ep_cco.not_null_ccdata_customer_portfolio_item_portfolio_item_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_customer_portfolio_item_portfolio_item_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "name": "not_null_ccdata_customer_portfolio_item_portfolio_item_id", "resource_type": "test", "alias": "not_null_ccdata_customer_portfolio_item_portfolio_item_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_portfolio_item"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_customer_portfolio_item"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_customer_portfolio_item_portfolio_item_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere portfolio_item_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere portfolio_item_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\nwhere portfolio_item_id is null\n\n", "column_name": "portfolio_item_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "portfolio_item_id"}}}, "error": null, "status": null, "execution_time": 0.010982990264892578, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.284525Z", "completed_at": "2020-04-20T13:29:20.294330Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.294693Z", "completed_at": "2020-04-20T13:29:20.294703Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_customer_portfolio_item'), column_name='account_id', field='account_id', to=ref('ccdata_cbs_account')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_customer_portfolio_item_account_id__account_id__ref_ccdata_cbs_account_"], "unique_id": "test.ep_cco.relationships_ccdata_customer_portfolio_item_account_id__account_id__ref_ccdata_cbs_account_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_customer_portfolio_item_d9b2c648582d7bde0ffa5b001e8b9c40.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "name": "relationships_ccdata_customer_portfolio_item_account_id__account_id__ref_ccdata_cbs_account_", "resource_type": "test", "alias": "relationships_ccdata_customer_portfolio_item_account_id__account_id__ref_ccdata_cbs_account_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_portfolio_item"], ["ccdata_cbs_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_customer_portfolio_item", "model.ep_cco.ccdata_cbs_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_customer_portfolio_item_d9b2c648582d7bde0ffa5b001e8b9c40.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select account_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_cbs_account')", "field": "account_id", "column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.013686895370483398, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.295980Z", "completed_at": "2020-04-20T13:29:20.308591Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.308868Z", "completed_at": "2020-04-20T13:29:20.308876Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_customer_portfolio_item'), column_name='brand_id', field='brand_id', to=ref('ccdata_customer_brand')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_customer_portfolio_item_brand_id__brand_id__ref_ccdata_customer_brand_"], "unique_id": "test.ep_cco.relationships_ccdata_customer_portfolio_item_brand_id__brand_id__ref_ccdata_customer_brand_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_customer_portfolio_item_07b46f6638c3186271441635eac9fbbb.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "name": "relationships_ccdata_customer_portfolio_item_brand_id__brand_id__ref_ccdata_customer_brand_", "resource_type": "test", "alias": "relationships_ccdata_customer_portfolio_item_brand_id__brand_id__ref_ccdata_customer_brand_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_portfolio_item"], ["ccdata_customer_brand"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_customer_portfolio_item", "model.ep_cco.ccdata_customer_brand"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_customer_portfolio_item_07b46f6638c3186271441635eac9fbbb.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select brand_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select brand_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select brand_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select brand_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select brand_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select brand_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_brand`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "brand_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_customer_brand')", "field": "brand_id", "column_name": "brand_id"}}}, "error": null, "status": null, "execution_time": 0.012223958969116211, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.310139Z", "completed_at": "2020-04-20T13:29:20.321169Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.321491Z", "completed_at": "2020-04-20T13:29:20.321500Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('ccdata_customer_portfolio_item'), column_name='customer_id', field='customer_id', to=ref('ccdata_customer')) }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "relationships_ccdata_customer_portfolio_item_customer_id__customer_id__ref_ccdata_customer_"], "unique_id": "test.ep_cco.relationships_ccdata_customer_portfolio_item_customer_id__customer_id__ref_ccdata_customer_", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/relationships_ccdata_customer_portfolio_item_ecd872c3f4dded515b58187193a8d1b7.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "name": "relationships_ccdata_customer_portfolio_item_customer_id__customer_id__ref_ccdata_customer_", "resource_type": "test", "alias": "relationships_ccdata_customer_portfolio_item_customer_id__customer_id__ref_ccdata_customer_", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_customer_portfolio_item"], ["ccdata_customer"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_relationships"], "nodes": ["model.ep_cco.ccdata_customer_portfolio_item", "model.ep_cco.ccdata_customer"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/relationships_ccdata_customer_portfolio_item_ecd872c3f4dded515b58187193a8d1b7.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n) as child\nleft join (\n    select customer_id as id from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer`\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('ccdata_customer')", "field": "customer_id", "column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.012352943420410156, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.322781Z", "completed_at": "2020-04-20T13:29:20.334029Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.334314Z", "completed_at": "2020-04-20T13:29:20.334322Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_customer_portfolio_item'), column_name='portfolio_item_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_customer_portfolio_item_portfolio_item_id"], "unique_id": "test.ep_cco.unique_ccdata_customer_portfolio_item_portfolio_item_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_customer_portfolio_item_portfolio_item_id.sql", "original_file_path": "models/ccdata/customer/ccdata_customer_portfolio_item.yml", "name": "unique_ccdata_customer_portfolio_item_portfolio_item_id", "resource_type": "test", "alias": "unique_ccdata_customer_portfolio_item_portfolio_item_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_customer_portfolio_item"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_customer_portfolio_item"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_customer_portfolio_item_portfolio_item_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        portfolio_item_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n    where portfolio_item_id is not null\n    group by portfolio_item_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        portfolio_item_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n    where portfolio_item_id is not null\n    group by portfolio_item_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        portfolio_item_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_customer_portfolio_item`\n    where portfolio_item_id is not null\n    group by portfolio_item_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "portfolio_item_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "portfolio_item_id"}}}, "error": null, "status": null, "execution_time": 0.01099085807800293, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.335514Z", "completed_at": "2020-04-20T13:29:20.345331Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.345696Z", "completed_at": "2020-04-20T13:29:20.345706Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n    STRUCT(\n        STRUCT(\n            a.account_id,\n            product_id,\n            product_version,\n            primary_customer_id ,\n            stakeholder_ids,\n            account_type,\n            account_sub_type,\n            status,\n            nick_name,\n            permitted_denominations,\n            currency,\n            description,\n            bank_id\n        ) as source,\n        STRUCT(\n            false as is_internal\n        ) as derived\n    ) as account\n--    ,\n--    STRUCT(\n--        scheme_name,\n--        aps.identification as bank_identifier\n--    ) as aps\n    ,\n    STRUCT(\n     coa.CBS,\n     coa.GL,\n     coa.LegacyWalker\n    ) as coa\nFROM\n    {{ref('ccdata_cbs_account')}} a\n    LEFT JOIN {{ref('src_ref_CoA')}}  coa\n        ON a.bank_id = coa.CBS.BankIdentifier\n        and a.product_id = coa.CBS.ProductCode\n        and coa.CBS.AccountNumber is null\nUNION ALL\nSELECT\n    STRUCT(\n        STRUCT(\n            iac.account_id,\n            null as product_id,\n            null as product_version,\n            null as primary_customer_id ,\n            null as stakeholder_ids,\n            iac.account_type,\n            null as account_sub_type,\n            iac.status,\n            null as nick_name,\n            iac.permitted_denominations,\n            iac.currency,\n            iac.description,\n            iac.bank_id\n        ) as source,\n        STRUCT(\n            true as is_internal\n        ) as derived\n    ) as account,\n--    STRUCT(\n--        scheme_name,\n--        aps.identification as bank_identifier\n--    ) as aps,\n    STRUCT(\n     coa.CBS,\n     coa.GL,\n     coa.LegacyWalker\n    ) as coa\nFROM\n    {{ref('ccdata_cbs_internal_account')}} iac\n    LEFT JOIN {{ref('src_ref_CoA')}}  coa\n      ON iac.bank_id = coa.CBS.BankIdentifier\n    and iac.account_id = coa.CBS.AccountNumber", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "cbs", "ccdata_cbs_combined_account"], "unique_id": "model.ep_cco.ccdata_cbs_combined_account", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/cbs/ccdata_cbs_combined_account.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_combined_account.sql", "name": "ccdata_cbs_combined_account", "resource_type": "model", "alias": "ccdata_cbs_combined_account", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["ccdata_cbs_account"], ["src_ref_CoA"], ["ccdata_cbs_internal_account"], ["src_ref_CoA"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.ccdata_cbs_account", "model.ep_cco.src_ref_CoA", "model.ep_cco.ccdata_cbs_internal_account", "model.ep_cco.src_ref_CoA"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/ccdata/cbs/ccdata_cbs_combined_account.sql", "compiled": true, "compiled_sql": "SELECT\n    STRUCT(\n        STRUCT(\n            a.account_id,\n            product_id,\n            product_version,\n            primary_customer_id ,\n            stakeholder_ids,\n            account_type,\n            account_sub_type,\n            status,\n            nick_name,\n            permitted_denominations,\n            currency,\n            description,\n            bank_id\n        ) as source,\n        STRUCT(\n            false as is_internal\n        ) as derived\n    ) as account\n--    ,\n--    STRUCT(\n--        scheme_name,\n--        aps.identification as bank_identifier\n--    ) as aps\n    ,\n    STRUCT(\n     coa.CBS,\n     coa.GL,\n     coa.LegacyWalker\n    ) as coa\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account` a\n    LEFT JOIN `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_ref_CoA`  coa\n        ON a.bank_id = coa.CBS.BankIdentifier\n        and a.product_id = coa.CBS.ProductCode\n        and coa.CBS.AccountNumber is null\nUNION ALL\nSELECT\n    STRUCT(\n        STRUCT(\n            iac.account_id,\n            null as product_id,\n            null as product_version,\n            null as primary_customer_id ,\n            null as stakeholder_ids,\n            iac.account_type,\n            null as account_sub_type,\n            iac.status,\n            null as nick_name,\n            iac.permitted_denominations,\n            iac.currency,\n            iac.description,\n            iac.bank_id\n        ) as source,\n        STRUCT(\n            true as is_internal\n        ) as derived\n    ) as account,\n--    STRUCT(\n--        scheme_name,\n--        aps.identification as bank_identifier\n--    ) as aps,\n    STRUCT(\n     coa.CBS,\n     coa.GL,\n     coa.LegacyWalker\n    ) as coa\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_internal_account` iac\n    LEFT JOIN `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_ref_CoA`  coa\n      ON iac.bank_id = coa.CBS.BankIdentifier\n    and iac.account_id = coa.CBS.AccountNumber", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n    STRUCT(\n        STRUCT(\n            a.account_id,\n            product_id,\n            product_version,\n            primary_customer_id ,\n            stakeholder_ids,\n            account_type,\n            account_sub_type,\n            status,\n            nick_name,\n            permitted_denominations,\n            currency,\n            description,\n            bank_id\n        ) as source,\n        STRUCT(\n            false as is_internal\n        ) as derived\n    ) as account\n--    ,\n--    STRUCT(\n--        scheme_name,\n--        aps.identification as bank_identifier\n--    ) as aps\n    ,\n    STRUCT(\n     coa.CBS,\n     coa.GL,\n     coa.LegacyWalker\n    ) as coa\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_account` a\n    LEFT JOIN `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_ref_CoA`  coa\n        ON a.bank_id = coa.CBS.BankIdentifier\n        and a.product_id = coa.CBS.ProductCode\n        and coa.CBS.AccountNumber is null\nUNION ALL\nSELECT\n    STRUCT(\n        STRUCT(\n            iac.account_id,\n            null as product_id,\n            null as product_version,\n            null as primary_customer_id ,\n            null as stakeholder_ids,\n            iac.account_type,\n            null as account_sub_type,\n            iac.status,\n            null as nick_name,\n            iac.permitted_denominations,\n            iac.currency,\n            iac.description,\n            iac.bank_id\n        ) as source,\n        STRUCT(\n            true as is_internal\n        ) as derived\n    ) as account,\n--    STRUCT(\n--        scheme_name,\n--        aps.identification as bank_identifier\n--    ) as aps,\n    STRUCT(\n     coa.CBS,\n     coa.GL,\n     coa.LegacyWalker\n    ) as coa\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_internal_account` iac\n    LEFT JOIN `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_ref_CoA`  coa\n      ON iac.bank_id = coa.CBS.BankIdentifier\n    and iac.account_id = coa.CBS.AccountNumber", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.01646280288696289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.346962Z", "completed_at": "2020-04-20T13:29:20.362200Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.362562Z", "completed_at": "2020-04-20T13:29:20.362571Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('ccdata_cbs_internal_account'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "not_null_ccdata_cbs_internal_account_account_id"], "unique_id": "test.ep_cco.not_null_ccdata_cbs_internal_account_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/not_null_ccdata_cbs_internal_account_account_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_internal_account.yml", "name": "not_null_ccdata_cbs_internal_account_account_id", "resource_type": "test", "alias": "not_null_ccdata_cbs_internal_account_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["ccdata_cbs_internal_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.ep_cco.ccdata_cbs_internal_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/not_null_ccdata_cbs_internal_account_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_internal_account`\nwhere account_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_internal_account`\nwhere account_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_internal_account`\nwhere account_id is null\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.011184930801391602, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.364055Z", "completed_at": "2020-04-20T13:29:20.373728Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.374152Z", "completed_at": "2020-04-20T13:29:20.374163Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='WARN') }}{{ test_unique(model=ref('ccdata_cbs_internal_account'), column_name='account_id') }}", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "schema_test", "unique_ccdata_cbs_internal_account_account_id"], "unique_id": "test.ep_cco.unique_ccdata_cbs_internal_account_account_id", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "schema_test/unique_ccdata_cbs_internal_account_account_id.sql", "original_file_path": "models/ccdata/cbs/ccdata_cbs_internal_account.yml", "name": "unique_ccdata_cbs_internal_account_account_id", "resource_type": "test", "alias": "unique_ccdata_cbs_internal_account_account_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "WARN"}, "tags": ["schema"], "refs": [["ccdata_cbs_internal_account"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.ep_cco.ccdata_cbs_internal_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/schema_test/unique_ccdata_cbs_internal_account_account_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_internal_account`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_internal_account`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        account_id\n\n    from `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_internal_account`\n    where account_id is not null\n    group by account_id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "account_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "account_id"}}}, "error": null, "status": null, "execution_time": 0.011004924774169922, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.375494Z", "completed_at": "2020-04-20T13:29:20.385369Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.385666Z", "completed_at": "2020-04-20T13:29:20.385683Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n  --create a struct for all the postings data\n  STRUCT(\n    --nest a struct for all the data exactly as it comes from source\n    STRUCT(\n      postings.id,\n      postings.transaction_id,\n      postings.create_request_id,\n      postings.client_id,\n      postings.client_batch_id,\n      postings.client_transaction_id,\n      postings.denomination,\n      postings.is_credit,\n      postings.account_address,\n      postings.account_id,\n      postings.asset,\n      postings.phase,\n      postings.creditor_account_number,\n      postings.creditor_bank_id,\n      postings.creditor_bank_id_code,\n      postings.debitor_account_number,\n      postings.debitor_bank_id,\n      postings.debitor_bank_id_code,\n      postings.value_timestamp,\n      postings.insertion_timestamp,\n      postings.error,\n      postings.is_dry_run,\n      postings.status,\n      postings.event_id,\n      postings.capture_timestamp\n    ) AS source,\n    --any derived attribute should be separated out in a derived substruct\n    --todo: this should be done in the postings stage table, not here!\n    STRUCT(\n      ca.account.source.bank_id AS bank_identifier,\n      postings.credit_amount,\n      postings.debit_amount,\n      postings.total\n    ) AS derived\n  ) AS postings,\n\n  --create a struct for accounts darta\n  STRUCT(\n    --nest a struct for all the data exactly as it comes from source\n    STRUCT(\n        ca.account.source.account_id,\n        ca.account.source.product_id,\n        ca.account.source.product_version,\n        ca.account.source.primary_customer_id ,\n        ca.account.source.stakeholder_ids,\n        ca.account.source.account_type,\n        ca.account.source.account_sub_type,\n        ca.account.source.status,\n        ca.account.source.nick_name,\n        ca.account.source.permitted_denominations,\n        ca.account.source.currency,\n        ca.account.source.description,\n        ca.account.derived.is_internal,\n        ca.account.source.bank_id\n    ) AS source\n  ) AS accounts,\n\n  --create a struct for all the CoA mapping data\n  STRUCT(\n    ca.coa.CBS,\n    ca.coa.GL,\n    ca.coa.LegacyWalker\n  ) AS coa\nFROM\n    {{ref('src_cbs_AccountPostings')}}    postings --todo: switch to ccdata journal entity\nLEFT JOIN\n  {{ref('ccdata_cbs_combined_account')}} ca\nON\n  postings.account_id = ca.account.source.account_id", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "ccdata", "finance", "ccdata_datamart_finance"], "unique_id": "model.ep_cco.ccdata_datamart_finance", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "ccdata/finance/ccdata_datamart_finance.sql", "original_file_path": "models/ccdata/finance/ccdata_datamart_finance.sql", "name": "ccdata_datamart_finance", "resource_type": "model", "alias": "ccdata_datamart_finance", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["CC layer"]}, "tags": ["CC layer"], "refs": [["src_cbs_AccountPostings"], ["ccdata_cbs_combined_account"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.src_cbs_AccountPostings", "model.ep_cco.ccdata_cbs_combined_account"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/ccdata/finance/ccdata_datamart_finance.sql", "compiled": true, "compiled_sql": "SELECT\n  --create a struct for all the postings data\n  STRUCT(\n    --nest a struct for all the data exactly as it comes from source\n    STRUCT(\n      postings.id,\n      postings.transaction_id,\n      postings.create_request_id,\n      postings.client_id,\n      postings.client_batch_id,\n      postings.client_transaction_id,\n      postings.denomination,\n      postings.is_credit,\n      postings.account_address,\n      postings.account_id,\n      postings.asset,\n      postings.phase,\n      postings.creditor_account_number,\n      postings.creditor_bank_id,\n      postings.creditor_bank_id_code,\n      postings.debitor_account_number,\n      postings.debitor_bank_id,\n      postings.debitor_bank_id_code,\n      postings.value_timestamp,\n      postings.insertion_timestamp,\n      postings.error,\n      postings.is_dry_run,\n      postings.status,\n      postings.event_id,\n      postings.capture_timestamp\n    ) AS source,\n    --any derived attribute should be separated out in a derived substruct\n    --todo: this should be done in the postings stage table, not here!\n    STRUCT(\n      ca.account.source.bank_id AS bank_identifier,\n      postings.credit_amount,\n      postings.debit_amount,\n      postings.total\n    ) AS derived\n  ) AS postings,\n\n  --create a struct for accounts darta\n  STRUCT(\n    --nest a struct for all the data exactly as it comes from source\n    STRUCT(\n        ca.account.source.account_id,\n        ca.account.source.product_id,\n        ca.account.source.product_version,\n        ca.account.source.primary_customer_id ,\n        ca.account.source.stakeholder_ids,\n        ca.account.source.account_type,\n        ca.account.source.account_sub_type,\n        ca.account.source.status,\n        ca.account.source.nick_name,\n        ca.account.source.permitted_denominations,\n        ca.account.source.currency,\n        ca.account.source.description,\n        ca.account.derived.is_internal,\n        ca.account.source.bank_id\n    ) AS source\n  ) AS accounts,\n\n  --create a struct for all the CoA mapping data\n  STRUCT(\n    ca.coa.CBS,\n    ca.coa.GL,\n    ca.coa.LegacyWalker\n  ) AS coa\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_AccountPostings`    postings --todo: switch to ccdata journal entity\nLEFT JOIN\n  `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_combined_account` ca\nON\n  postings.account_id = ca.account.source.account_id", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n  --create a struct for all the postings data\n  STRUCT(\n    --nest a struct for all the data exactly as it comes from source\n    STRUCT(\n      postings.id,\n      postings.transaction_id,\n      postings.create_request_id,\n      postings.client_id,\n      postings.client_batch_id,\n      postings.client_transaction_id,\n      postings.denomination,\n      postings.is_credit,\n      postings.account_address,\n      postings.account_id,\n      postings.asset,\n      postings.phase,\n      postings.creditor_account_number,\n      postings.creditor_bank_id,\n      postings.creditor_bank_id_code,\n      postings.debitor_account_number,\n      postings.debitor_bank_id,\n      postings.debitor_bank_id_code,\n      postings.value_timestamp,\n      postings.insertion_timestamp,\n      postings.error,\n      postings.is_dry_run,\n      postings.status,\n      postings.event_id,\n      postings.capture_timestamp\n    ) AS source,\n    --any derived attribute should be separated out in a derived substruct\n    --todo: this should be done in the postings stage table, not here!\n    STRUCT(\n      ca.account.source.bank_id AS bank_identifier,\n      postings.credit_amount,\n      postings.debit_amount,\n      postings.total\n    ) AS derived\n  ) AS postings,\n\n  --create a struct for accounts darta\n  STRUCT(\n    --nest a struct for all the data exactly as it comes from source\n    STRUCT(\n        ca.account.source.account_id,\n        ca.account.source.product_id,\n        ca.account.source.product_version,\n        ca.account.source.primary_customer_id ,\n        ca.account.source.stakeholder_ids,\n        ca.account.source.account_type,\n        ca.account.source.account_sub_type,\n        ca.account.source.status,\n        ca.account.source.nick_name,\n        ca.account.source.permitted_denominations,\n        ca.account.source.currency,\n        ca.account.source.description,\n        ca.account.derived.is_internal,\n        ca.account.source.bank_id\n    ) AS source\n  ) AS accounts,\n\n  --create a struct for all the CoA mapping data\n  STRUCT(\n    ca.coa.CBS,\n    ca.coa.GL,\n    ca.coa.LegacyWalker\n  ) AS coa\nFROM\n    `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`src_cbs_AccountPostings`    postings --todo: switch to ccdata journal entity\nLEFT JOIN\n  `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_cbs_combined_account` ca\nON\n  postings.account_id = ca.account.source.account_id", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.010466814041137695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.386897Z", "completed_at": "2020-04-20T13:29:20.396203Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.396530Z", "completed_at": "2020-04-20T13:29:20.396539Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "SELECT\n  SUM(postings.derived.credit_amount) AS credit_entered,\n  SUM(postings.derived.debit_amount) AS debit_entered,\n  postings.source.denomination AS currency,\n  coa.GL.CompanyCode AS company,\n  coa.GL.BusinessUnitCode AS business_unit,\n  coa.GL.CostCenterCode AS cost_centre,\n  coa.GL.OriginCode AS origin,\n  coa.GL.IntercompanyCode AS intercompany,\n  coa.GL.ProjectCode AS project,\n  coa.GL.NominalCode AS nominal,\n  EXTRACT(DATE FROM postings.source.value_timestamp) as as_of_date\nFROM\n  {{ref('ccdata_datamart_finance')}}\nWHERE\n    postings.source.value_timestamp >= TIMESTAMP(\"{{ var('start_date') }} 00:00:00\")\n    and postings.source.value_timestamp <= TIMESTAMP(\"{{ var('end_date') }} 23:59:59\")\nGROUP BY\n  postings.source.denomination,\n  coa.gl.CompanyCode,\n  coa.gl.BusinessUnitCode,\n  coa.gl.CostCenterCode,\n  coa.gl.OriginCode,\n  coa.gl.IntercompanyCode,\n  coa.gl.ProjectCode,\n  coa.gl.NominalCode,\n  EXTRACT(DATE FROM postings.source.value_timestamp)", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "feed", "general_ledger", "feed_general_ledger"], "unique_id": "model.ep_cco.feed_general_ledger", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "feed/general_ledger/feed_general_ledger.sql", "original_file_path": "models/feed/general_ledger/feed_general_ledger.sql", "name": "feed_general_ledger", "resource_type": "model", "alias": "feed_general_ledger", "config": {"enabled": true, "materialized": "table", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {"start_date": "2020-01-01", "end_date": "2025-12-31", "test_data": false}, "quoting": {}, "column_types": {}, "tags": ["Feeds"]}, "tags": ["Feeds"], "refs": [["ccdata_datamart_finance"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.ccdata_datamart_finance"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/feed/general_ledger/feed_general_ledger.sql", "compiled": true, "compiled_sql": "SELECT\n  SUM(postings.derived.credit_amount) AS credit_entered,\n  SUM(postings.derived.debit_amount) AS debit_entered,\n  postings.source.denomination AS currency,\n  coa.GL.CompanyCode AS company,\n  coa.GL.BusinessUnitCode AS business_unit,\n  coa.GL.CostCenterCode AS cost_centre,\n  coa.GL.OriginCode AS origin,\n  coa.GL.IntercompanyCode AS intercompany,\n  coa.GL.ProjectCode AS project,\n  coa.GL.NominalCode AS nominal,\n  EXTRACT(DATE FROM postings.source.value_timestamp) as as_of_date\nFROM\n  `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_datamart_finance`\nWHERE\n    postings.source.value_timestamp >= TIMESTAMP(\"2020-01-01 00:00:00\")\n    and postings.source.value_timestamp <= TIMESTAMP(\"2025-12-31 23:59:59\")\nGROUP BY\n  postings.source.denomination,\n  coa.gl.CompanyCode,\n  coa.gl.BusinessUnitCode,\n  coa.gl.CostCenterCode,\n  coa.gl.OriginCode,\n  coa.gl.IntercompanyCode,\n  coa.gl.ProjectCode,\n  coa.gl.NominalCode,\n  EXTRACT(DATE FROM postings.source.value_timestamp)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "SELECT\n  SUM(postings.derived.credit_amount) AS credit_entered,\n  SUM(postings.derived.debit_amount) AS debit_entered,\n  postings.source.denomination AS currency,\n  coa.GL.CompanyCode AS company,\n  coa.GL.BusinessUnitCode AS business_unit,\n  coa.GL.CostCenterCode AS cost_centre,\n  coa.GL.OriginCode AS origin,\n  coa.GL.IntercompanyCode AS intercompany,\n  coa.GL.ProjectCode AS project,\n  coa.GL.NominalCode AS nominal,\n  EXTRACT(DATE FROM postings.source.value_timestamp) as as_of_date\nFROM\n  `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`ccdata_datamart_finance`\nWHERE\n    postings.source.value_timestamp >= TIMESTAMP(\"2020-01-01 00:00:00\")\n    and postings.source.value_timestamp <= TIMESTAMP(\"2025-12-31 23:59:59\")\nGROUP BY\n  postings.source.denomination,\n  coa.gl.CompanyCode,\n  coa.gl.BusinessUnitCode,\n  coa.gl.CostCenterCode,\n  coa.gl.OriginCode,\n  coa.gl.IntercompanyCode,\n  coa.gl.ProjectCode,\n  coa.gl.NominalCode,\n  EXTRACT(DATE FROM postings.source.value_timestamp)", "wrapped_sql": null}, "error": null, "status": null, "execution_time": 0.010915040969848633, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.398082Z", "completed_at": "2020-04-20T13:29:20.407815Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.408141Z", "completed_at": "2020-04-20T13:29:20.408148Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "(\n    SELECT\n      *\n    FROM {{ref('feed_general_ledger')}}\n\n    EXCEPT DISTINCT\n\n    SELECT\n      *\n    FROM {{ref('test_scenario01_expected_feed_general_ledger')}}\n)\nUNION ALL\n\n(\n    SELECT\n      *\n    FROM {{ref('test_scenario01_expected_feed_general_ledger')}}\n\n    EXCEPT DISTINCT\n\n    SELECT\n      *\n    FROM {{ref('feed_general_ledger')}}\n)", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "black-box", "data_test", "assert_expected_result_feed_general_ledger"], "unique_id": "test.ep_cco.assert_expected_result_feed_general_ledger", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "black-box/data_test/assert_expected_result_feed_general_ledger.sql", "original_file_path": "tests/black-box/assert_expected_result_feed_general_ledger.sql", "name": "assert_expected_result_feed_general_ledger", "resource_type": "test", "alias": "assert_expected_result_feed_general_ledger", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["data"], "refs": [["feed_general_ledger"], ["test_scenario01_expected_feed_general_ledger"], ["test_scenario01_expected_feed_general_ledger"], ["feed_general_ledger"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.feed_general_ledger", "seed.ep_cco.test_scenario01_expected_feed_general_ledger", "seed.ep_cco.test_scenario01_expected_feed_general_ledger", "model.ep_cco.feed_general_ledger"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/black-box/data_test/assert_expected_result_feed_general_ledger.sql", "compiled": true, "compiled_sql": "(\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`test_scenario01_expected_feed_general_ledger`\n)\nUNION ALL\n\n(\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`test_scenario01_expected_feed_general_ledger`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\n)", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "(\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`test_scenario01_expected_feed_general_ledger`\n)\nUNION ALL\n\n(\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`test_scenario01_expected_feed_general_ledger`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\n)", "wrapped_sql": "select count(*) as errors from (\n(\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`test_scenario01_expected_feed_general_ledger`\n)\nUNION ALL\n\n(\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`test_scenario01_expected_feed_general_ledger`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      *\n    FROM `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\n)\n) sbq", "column_name": null, "test_metadata": null}, "error": null, "status": null, "execution_time": 0.013033866882324219, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.409502Z", "completed_at": "2020-04-20T13:29:20.421326Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.421671Z", "completed_at": "2020-04-20T13:29:20.421682Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select\nif(sum(credit_entered) != 0, sum(credit_entered), -1) sum_credit, /* if sum is 0, return 1(diff value to debit amount) so that the test fail */\nif(sum(debit_entered)  != 0, sum(debit_entered) , -2) sum_debit , /* if sum is 0, return 1(diff value to credit amount) so that the test fail */\nsum(credit_entered - debit_entered) diff\nfrom {{ ref('feed_general_ledger') }}\nhaving\n    sum_credit != sum_debit OR diff != 0", "database": "eplus-cco-bld-02-e3e4", "schema": "ep_cco_bld2_bqd_eu2_ep_cco_abh", "fqn": ["ep_cco", "white-box-post-run", "data_test", "assert_gl_feed_credit_debit_matches"], "unique_id": "test.ep_cco.assert_gl_feed_credit_debit_matches", "package_name": "ep_cco", "root_path": "/Users/hardhill1/sapient/devops/gcp/ep-cco/dbt/ep_cco", "path": "white-box-post-run/data_test/assert_gl_feed_credit_debit_matches.sql", "original_file_path": "tests/white-box-post-run/assert_gl_feed_credit_debit_matches.sql", "name": "assert_gl_feed_credit_debit_matches", "resource_type": "test", "alias": "assert_gl_feed_credit_debit_matches", "config": {"enabled": true, "materialized": "view", "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["data"], "refs": [["feed_general_ledger"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.ep_cco.feed_general_ledger"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/ep_cco/white-box-post-run/data_test/assert_gl_feed_credit_debit_matches.sql", "compiled": true, "compiled_sql": "select\nif(sum(credit_entered) != 0, sum(credit_entered), -1) sum_credit, /* if sum is 0, return 1(diff value to debit amount) so that the test fail */\nif(sum(debit_entered)  != 0, sum(debit_entered) , -2) sum_debit , /* if sum is 0, return 1(diff value to credit amount) so that the test fail */\nsum(credit_entered - debit_entered) diff\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\nhaving\n    sum_credit != sum_debit OR diff != 0", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\nif(sum(credit_entered) != 0, sum(credit_entered), -1) sum_credit, /* if sum is 0, return 1(diff value to debit amount) so that the test fail */\nif(sum(debit_entered)  != 0, sum(debit_entered) , -2) sum_debit , /* if sum is 0, return 1(diff value to credit amount) so that the test fail */\nsum(credit_entered - debit_entered) diff\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\nhaving\n    sum_credit != sum_debit OR diff != 0", "wrapped_sql": "select count(*) as errors from (\nselect\nif(sum(credit_entered) != 0, sum(credit_entered), -1) sum_credit, /* if sum is 0, return 1(diff value to debit amount) so that the test fail */\nif(sum(debit_entered)  != 0, sum(debit_entered) , -2) sum_debit , /* if sum is 0, return 1(diff value to credit amount) so that the test fail */\nsum(credit_entered - debit_entered) diff\nfrom `eplus-cco-bld-02-e3e4`.`ep_cco_bld2_bqd_eu2_ep_cco_abh`.`feed_general_ledger`\nhaving\n    sum_credit != sum_debit OR diff != 0\n) sbq", "column_name": null, "test_metadata": null}, "error": null, "status": null, "execution_time": 0.009202957153320312, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-04-20T13:29:20.422941Z", "completed_at": "2020-04-20T13:29:20.431052Z"}, {"name": "execute", "started_at": "2020-04-20T13:29:20.431378Z", "completed_at": "2020-04-20T13:29:20.431385Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-04-20T13:29:20.521950Z", "elapsed_time": 1.3997418880462646}