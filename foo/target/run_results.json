{"results": [{"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('my_first_dbt_model'), column_name='id') }}", "database": "postgres", "schema": "postgres", "fqn": ["my_new_project", "schema_test", "not_null_my_first_dbt_model_id"], "unique_id": "test.my_new_project.not_null_my_first_dbt_model_id", "package_name": "my_new_project", "root_path": "/root/foo", "path": "schema_test/not_null_my_first_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "not_null_my_first_dbt_model_id", "resource_type": "test", "alias": "not_null_my_first_dbt_model_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["my_first_dbt_model"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.my_new_project.my_first_dbt_model"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/my_new_project/schema_test/not_null_my_first_dbt_model_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"postgres\".\"my_first_dbt_model\"\nwhere id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"postgres\".\"my_first_dbt_model\"\nwhere id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"postgres\".\"my_first_dbt_model\"\nwhere id is null\n\n", "column_name": "id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "id"}}}, "error": "Database Error in test not_null_my_first_dbt_model_id (models/example/schema.yml)\n  relation \"postgres.my_first_dbt_model\" does not exist\n  LINE 7: from \"postgres\".\"postgres\".\"my_first_dbt_model\"\n               ^\n  compiled SQL at target/compiled/my_new_project/schema_test/not_null_my_first_dbt_model_id.sql", "status": "ERROR", "execution_time": 0.1486501693725586, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('my_second_dbt_model'), column_name='id') }}", "database": "postgres", "schema": "postgres", "fqn": ["my_new_project", "schema_test", "not_null_my_second_dbt_model_id"], "unique_id": "test.my_new_project.not_null_my_second_dbt_model_id", "package_name": "my_new_project", "root_path": "/root/foo", "path": "schema_test/not_null_my_second_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "not_null_my_second_dbt_model_id", "resource_type": "test", "alias": "not_null_my_second_dbt_model_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["my_second_dbt_model"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.my_new_project.my_second_dbt_model"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/my_new_project/schema_test/not_null_my_second_dbt_model_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"postgres\".\"my_second_dbt_model\"\nwhere id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"postgres\".\"my_second_dbt_model\"\nwhere id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"postgres\".\"postgres\".\"my_second_dbt_model\"\nwhere id is null\n\n", "column_name": "id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "id"}}}, "error": "Database Error in test not_null_my_second_dbt_model_id (models/example/schema.yml)\n  relation \"postgres.my_second_dbt_model\" does not exist\n  LINE 7: from \"postgres\".\"postgres\".\"my_second_dbt_model\"\n               ^\n  compiled SQL at target/compiled/my_new_project/schema_test/not_null_my_second_dbt_model_id.sql", "status": "ERROR", "execution_time": 0.13863849639892578, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('my_first_dbt_model'), column_name='id') }}", "database": "postgres", "schema": "postgres", "fqn": ["my_new_project", "schema_test", "unique_my_first_dbt_model_id"], "unique_id": "test.my_new_project.unique_my_first_dbt_model_id", "package_name": "my_new_project", "root_path": "/root/foo", "path": "schema_test/unique_my_first_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "unique_my_first_dbt_model_id", "resource_type": "test", "alias": "unique_my_first_dbt_model_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["my_first_dbt_model"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.my_new_project.my_first_dbt_model"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/my_new_project/schema_test/unique_my_first_dbt_model_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"postgres\".\"postgres\".\"my_first_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"postgres\".\"postgres\".\"my_first_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"postgres\".\"postgres\".\"my_first_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "id"}}}, "error": "Database Error in test unique_my_first_dbt_model_id (models/example/schema.yml)\n  relation \"postgres.my_first_dbt_model\" does not exist\n  LINE 12:     from \"postgres\".\"postgres\".\"my_first_dbt_model\"\n                    ^\n  compiled SQL at target/compiled/my_new_project/schema_test/unique_my_first_dbt_model_id.sql", "status": "ERROR", "execution_time": 0.13011837005615234, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('my_second_dbt_model'), column_name='id') }}", "database": "postgres", "schema": "postgres", "fqn": ["my_new_project", "schema_test", "unique_my_second_dbt_model_id"], "unique_id": "test.my_new_project.unique_my_second_dbt_model_id", "package_name": "my_new_project", "root_path": "/root/foo", "path": "schema_test/unique_my_second_dbt_model_id.sql", "original_file_path": "models/example/schema.yml", "name": "unique_my_second_dbt_model_id", "resource_type": "test", "alias": "unique_my_second_dbt_model_id", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["my_second_dbt_model"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.my_new_project.my_second_dbt_model"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/my_new_project/schema_test/unique_my_second_dbt_model_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"postgres\".\"postgres\".\"my_second_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"postgres\".\"postgres\".\"my_second_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        id\n\n    from \"postgres\".\"postgres\".\"my_second_dbt_model\"\n    where id is not null\n    group by id\n    having count(*) > 1\n\n) validation_errors\n\n", "column_name": "id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "id"}}}, "error": "Database Error in test unique_my_second_dbt_model_id (models/example/schema.yml)\n  relation \"postgres.my_second_dbt_model\" does not exist\n  LINE 12:     from \"postgres\".\"postgres\".\"my_second_dbt_model\"\n                    ^\n  compiled SQL at target/compiled/my_new_project/schema_test/unique_my_second_dbt_model_id.sql", "status": "ERROR", "execution_time": 0.13574528694152832, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-04-07T12:14:18.209010Z", "elapsed_time": 1.2440037727355957}